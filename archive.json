{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-04-09T00:53:27.306834+00:00",
  "repo": "wangshan/draft-wang-ppm-differential-privacy",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 6,
      "id": "I_kwDOJ7sZWc5rz0LL",
      "title": "Specify motivations/limitations to use different DP guarantees",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/6",
      "state": "OPEN",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should better specify why one will choose to use one DP guarantee over another (e.g. tighter privacy bound) or any limitation of using a DP guarantee (some DP mechanisms are limited to certain guarantees).",
      "createdAt": "2023-07-17T22:51:03Z",
      "updatedAt": "2023-07-17T22:51:03Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 7,
      "id": "I_kwDOJ7sZWc5rz0z9",
      "title": "Which DP definition is \"best\", and do _we_ really care about composability?",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/7",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Composability of multiple DP mechanisms into a new DP mechanism is often touted as a \"killer\" feature of DP. (As it is here.) While I think I understand why this is from an academic's perspective, I'm wondering if the IETF/IRTF audiences will actually care about this, and whether it's worth mentioning this at all.\r\n\r\nConcretely: how will composition theorems cited in the current draft be used in an analysis of DAP or in the design of a DP mechanism?",
      "createdAt": "2023-07-17T22:54:20Z",
      "updatedAt": "2023-07-18T02:57:01Z",
      "closedAt": "2023-07-18T02:57:01Z",
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Attempting to answer my own question here :)\r\n\r\nIs a DP policy meant to be a composition of DP mechanisms?",
          "createdAt": "2023-07-18T02:36:08Z",
          "updatedAt": "2023-07-18T02:36:08Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "The answer is yes!",
          "createdAt": "2023-07-18T02:57:01Z",
          "updatedAt": "2023-07-18T02:57:01Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOJ7sZWc5r01m5",
      "title": "Changes for DAP/VDAF",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/8",
      "state": "OPEN",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is a tracking issue for changes that will be needed for the DAP and VDAF drafts in order to accommodate the recommendations here.",
      "createdAt": "2023-07-18T03:31:15Z",
      "updatedAt": "2023-07-18T03:31:15Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOJ7sZWc5r63xP",
      "title": "Specify algorithms (DiscreteLaplace, DiscreteGaussian, Randomized Response) in {{CKS20}}",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/10",
      "state": "OPEN",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Related to this comment: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/9#discussion_r1267190967",
      "createdAt": "2023-07-18T19:33:01Z",
      "updatedAt": "2023-07-20T17:58:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDOJ7sZWc5sJ-ef",
      "title": "Optimization for DAP - when DP guarantee is satisfied but min batch size is not met",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/12",
      "state": "OPEN",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "If the DP guarantee composed by both Client-DP and Aggregator-DP accomplishes the target guarantee, it's possible that a batch can be outputted with enough DP guarantee, but may not satisfy min batch size after a DAP task has expired. Population size can be hard to estimate in practice, so this optimization can allow DAP to output aggregates without sacrificing privacy in terms of DP.",
      "createdAt": "2023-07-20T18:16:33Z",
      "updatedAt": "2023-07-20T18:16:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 13,
      "id": "I_kwDOJ7sZWc5sKQIU",
      "title": "User-level DP and other notions of DP that are not DAP-friendly",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/13",
      "state": "OPEN",
      "author": "tholop",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Keeping track of something we discussed with @cjpatton: some notions of DP are not achievable with DAP, at least in the current form of the protocol. For instance:\r\n- User-level DP seems hard to enforce if a given user can contribute from multiple devices or across multiple batches. In some cases we can ask users to bound their own contributions and achieve something similar to group privacy, but this might not always doable (e.g. if a user owns two devices that send measurements automatically without keeping track of the global number of measurements). Here is one reference about contribution bounding for user-level DP: https://arxiv.org/pdf/1909.01917.pdf (in the more general context of DP SQL).\r\n- Deletion-DP is not compatible with the current DAP specification that releases the number of measurements in a batch. Some mitigations have been discussed, e.g. by adding dummy reports (I can't find the relevant Github discussion anymore, but here is a comment from the spec: https://github.com/ietf-wg-ppm/draft-ietf-ppm-dap/blob/8fe9e265ea08a14a8aa1aab1d7dcf05498430b15/draft-ietf-ppm-dap.md?plain=1#L2677). Substitution-DP doesn't have this problem. \r\n- More generally, DAP Aggregators have access to some metadata that can pose problems, such as timestamps or Client IPs. Releasing the min/max timestamp of a batch to the Collector is problematic even if Aggregators are honest (unless we use a DP mechanism such as [Report Noisy Max](https://privacytools.seas.harvard.edu/files/privacytools/files/the_algorithmic_foundations_of_differential_privacy_0.pdf) to make this timestamp DP).",
      "createdAt": "2023-07-20T19:00:09Z",
      "updatedAt": "2023-07-21T16:08:16Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "body": "For the first problem some client side bound could help, for example the proposal of using rate limiting PAT: https://github.com/cpriebe/draft-priebe-ppm-dap-reportauth. But it is indeed to hard to limit same user data form multiple devices.\r\nClientIPs and timestamps can be mitigated by a anonymous proxy like OHTTP, in DAP there is also a time precision field in task config to avoid revealing exact timestamp.",
          "createdAt": "2023-07-21T16:08:16Z",
          "updatedAt": "2023-07-21T16:08:16Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOJ7sZWc5sLUp4",
      "title": "Aggregators adding DP noise requires structural deviation from DAP",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/15",
      "state": "OPEN",
      "author": "tanyav2",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "DAP property 1: Collector can be run by the same entity as an Aggregator\r\nDAP property 2: Either aggregator is allowed to be malicious\r\n\r\nOne proposal is to add DP noise to the aggregators. The implication for the threat model then is that collector is an adversary we are defending against. Otherwise, just add noise to collector, no reason to add to aggregators, and it's more efficient that way.\r\n\r\nNow consider Agg1 and Collector are run by same entity. Let's assume the independent Agg2 is malicious and chooses for instance, not to add any noise. Even if Agg1 honestly adds noise, this is visible to the Collector, who can simply remove it. So this proposition forces Agg2 to be honest, which violates DAP property 2, as only Agg1 is allowed to be malicious. \r\n\r\nThis could be fine, but now it needs to be specified that if DP noise guarantees are to be met, there needs to be structural deviation from DAP in terms of who is allowed to be malicious.",
      "createdAt": "2023-07-20T22:53:43Z",
      "updatedAt": "2023-07-21T16:12:28Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That's a good point. It's really worth clarifying what are the precise DP guarantees. At the moment, @cjpatton and I are working on something along the lines of \"the view of an adversary that controls the Collector, at most one Aggregator, and any number of Clients is (computationally) DP with respect to the input of honest Clients\".\r\n\r\n> Now consider Agg1 and Collector are run by same entity. Let's assume the independent Agg2 is malicious and chooses for instance, not to add any noise. Even if Agg1 honestly adds noise, this is visible to the Collector, who can simply remove it.\r\n\r\nIf Agg2 is malicious, then Agg1 must be honest. Since Agg1 and Collector are run by the same entity, then Collector is honest too. If Collector is honest, why would they remove the noise? \r\n\r\nEdit: That being said, it might be desirable to provide DP against honest parties too (like the Collector in your example). And indeed, that sounds like a structural deviation from DAP. I don't know how practical that would be.",
          "createdAt": "2023-07-21T00:11:41Z",
          "updatedAt": "2023-07-21T00:14:28Z"
        },
        {
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "body": "I think if Collector removes the noise from its co-locating agg1, then it\u2019s the same as agg1 being dishonest? That breaks the prerequisite of DAP if agg2 is also malicious.",
          "createdAt": "2023-07-21T16:12:28Z",
          "updatedAt": "2023-07-21T16:12:28Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOJ7sZWc5xktfg",
      "title": "Use a unicode character for greek letters (e.g., \u0511 instead of `EPSILON`)",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/18",
      "state": "OPEN",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Did you know that you can do this now:\r\n\r\n```suggestion\r\nLet `exp(\u03b5)` denote raising the numeric constant `e` to the power of\r\n```\r\n\r\nOf course, whether you want to or not is something you will need to decide.\r\n\r\n_Originally posted by @martinthomson in https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/17#discussion_r1329403113_\r\n            ",
      "createdAt": "2023-09-20T17:37:36Z",
      "updatedAt": "2023-09-20T17:37:36Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDOJ7sZWc50PDO7",
      "title": "Use fixed precision in parameters",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/23",
      "state": "OPEN",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This includes `epsilon` and `delta` parameters in DP policies, and also the parameters to initialize samplers, such as `sigma` for discrete Gaussian.",
      "createdAt": "2023-10-18T16:01:44Z",
      "updatedAt": "2023-10-18T16:01:44Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOJ7sZWc50PLDX",
      "title": "Organize reference implementation into python modules",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/24",
      "state": "OPEN",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This will make importing sources a lot cleaner and will make unit testing more standard (e.g. with `unittest` and `pytest`).",
      "createdAt": "2023-10-18T16:13:26Z",
      "updatedAt": "2023-10-18T16:13:26Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 26,
      "id": "I_kwDOJ7sZWc50Y3eJ",
      "title": "Steering DP definitions in the right direction",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/26",
      "state": "OPEN",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "While reviewing the binary randomized response mechanism (#22) for which we have a sort of \"one-off\" DP definition, I had the following thought.\r\n\r\nIn the medium term, I think we should spend time thinking through how this notion of DP relates to the notion of DP we've already defined.\r\n\r\nLong term, I think our goal for PPM should be to have a single (or as few as possible) notions of DP. That way we have a standard methodology (or methodologies) for evaluating DP mechanisms and policies. The fact that there are so many DP notions in the literature that may or may not be comparable is a huge problem for standardization.\r\n\r\nRelatedly, I believe there is an important research question here: for a given application (DAP) systematize the DP notions in the literature that apply such that we can compare them to one another (at least qualitatively, but ideally quantitatively). Presumably there are trade-offs to be made, depending on which notion of DP you pick; what we want at the end of the day is the right DP notion that allows us to make sense of what to do for DAP.\r\n\r\n_Originally posted by @cjpatton in https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/22#discussion_r1365830045_\r\n            ",
      "createdAt": "2023-10-19T16:42:54Z",
      "updatedAt": "2023-10-19T17:50:19Z",
      "closedAt": null,
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree we shouldn't complicate the spec if we don't have to. The case with binary randomized response is that it is a simple local randomizer, but only works in deletion-DP model, which is worth mentioning because a `EPSILON_0`-DP in deletion-DP translates to an upper bound of `2 * EPSILON_0`-DP in replacement-DP (Definition II.4 in [EFMR+20](https://arxiv.org/pdf/2001.03618.pdf) and Definition C.1 in [MJTB+22](https://arxiv.org/pdf/2211.10082.pdf)). I think we only need to deal with deletion-DP in the Client-DP mechanisms, but from an aggregate result point of view, we always want to provide DP in replacement-DP model, which is how DP is defined in overview section of the draft. Hence currently we only introduce deletion-DP in binary randomized response.\r\n\r\nThere are other notions of DP we may need to introduce, e.g. other definitions of DP budget instead of pure `EPSILON`-DP and `(EPSILON, DELTA)`-DP, e.g. [R\u00e9nyi-DP](https://arxiv.org/abs/1702.07476), [Concentrated-DP](https://arxiv.org/abs/1605.02065), which are more optimal during composition of DP budgets if we need to enforce DP budgets. But we can think about these when we get there.\r\n\r\n> for a given application (DAP) systematize the DP notions in the literature that apply such that we can compare them to one another (at least qualitatively, but ideally quantitatively).\r\n\r\nI agree we should compare the tradeoffs, so users can pick the right DP policy based on the deployment environment they are in. I assume that's one of the goals of this draft. To start with, quantitatively, we can probably compare utility, communication cost, and qualitatively, trust model?",
          "createdAt": "2023-10-19T17:50:19Z",
          "updatedAt": "2023-10-19T17:50:19Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "I_kwDOJ7sZWc50q5XE",
      "title": "Benefit of assuming honest-but-curious party instead of malicious party in trust models",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/28",
      "state": "OPEN",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Originally discussed [here](https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/27/files#r1367450249)",
      "createdAt": "2023-10-23T15:08:52Z",
      "updatedAt": "2023-10-23T15:08:52Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 38,
      "id": "I_kwDOJ7sZWc52FM19",
      "title": "Nuanced point about the definition of approximate DP",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/38",
      "state": "OPEN",
      "author": "bmcase",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Hi @wangshan, first want to say great to see this work on DP for VDAFs/PPM.  I've reviewed your draft and it's looking good. I'll leave some feedback in a few issues here. \r\n\r\nFirst is a nuanced point about the difference between the definitions for pure and approximate DP.  In pure DP it is fine to say \"for all outputs r of the mechanism\", but for approximate-DP we need to shift to saying \"for all subsets of possible outputs\".  See page 3 of these [lecture notes](http://www.gautamkamath.com/CS860notes/lec5.pdf) for discussion and an attack illustrating the difference. I have to think a little about what could go wrong concretely in this setting, but I think what it could look like is that if r is a vector of aggregates the mechanism could output r (without any noise) along with one more position which is a random value in $\\{1,...,1/\\delta\\}$.",
      "createdAt": "2023-11-07T10:51:59Z",
      "updatedAt": "2023-11-07T10:51:59Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 39,
      "id": "I_kwDOJ7sZWc52FObK",
      "title": "MPC threat models \u2013 honest majority ",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/39",
      "state": "OPEN",
      "author": "bmcase",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I see there is already some feedback around considering semi-honest or malicious trust models. I\u2019d like to add it would also be good to consider honest majority vs dishonest majority MPC.  We\u2019ve found the 3-party honest majority malicious setting to particularly useful. \r\n\r\nI think there is some distinction to be made here between VDAFs and PPM where in the PPM spec the decision has been to focus on two-parties.  ",
      "createdAt": "2023-11-07T10:55:31Z",
      "updatedAt": "2023-12-01T19:20:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi Ben, (sorry it took me so long to get reply!)\r\n\r\nI guess it depends somewhat on what we decide the scope of the draft to be.\r\n\r\nRight now our intent is to focus on DAP, and for the moment DAP is not compatible with any 3-party, honest majority MPC. This could change, depending on your requirements, but this is a discussion for DAP and not this draft in particular.\r\n\r\nIf we decide to extend the scope beyond DAP, then I think there are two directions we might go in.\r\n\r\n1. If we want to spell out how in full detail how to run a DP policy alongside the protocol (like we do for DAP), then we need to have a concrete protocol in mind. Further, this would need to be something that some WG at IETF is working on (or likely will work on the future).\r\n2. We could re-scope the draft to be not specific to any particular protocol.",
          "createdAt": "2023-12-01T19:20:17Z",
          "updatedAt": "2023-12-01T19:20:17Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDOJ7sZWc52FPuw",
      "title": "Clarification on \u201csharding\u201d mentioned in section 5",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/40",
      "state": "OPEN",
      "author": "bmcase",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In Section 5 it mentions \r\n> An optional Aggregator randomization mechanism that adds noise to an Aggregator's aggregate share prior to unsharding.\r\n\r\nIs \"sharding\" here talking multiple servers run by the Aggregator parties processing different parts of the data and adding noise to each?   Because that will be more noise than necessary and we should think about adding noise after the unsharding but before revealing the results.  I may be miss understanding the terminology distinguishing \"Aggregator\" which I assume to be a Party that could be processing multiple \"shards\" of data on many servers.   \r\n",
      "createdAt": "2023-11-07T10:58:34Z",
      "updatedAt": "2023-11-14T18:42:55Z",
      "closedAt": null,
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is \"sharding\" here talking multiple servers run by the Aggregator parties processing different parts of the data and adding noise to each?\r\n\r\nYou are right about \"sharding\" (and \"unsharding\" I assume), and one Aggregator processes one piece of data (i.e., \"input share\") from sharding. We've been referencing the terms in the VDAF draft for those ([sharding](https://www.ietf.org/archive/id/draft-irtf-cfrg-vdaf-07.html#name-sharding-2) and [unsharding](https://www.ietf.org/archive/id/draft-irtf-cfrg-vdaf-07.html#name-unsharding-2)). \r\n\r\n> Because that will be more noise than necessary and we should think about adding noise after the unsharding but before revealing the results.\r\n\r\nThat is true that more noise will be added than necessary. Usually the \"collector\" is the party that sees the aggregate result in the clear, so it will be too late to add DP noise then, i.e., the exact result have already been revealed by then.",
          "createdAt": "2023-11-14T18:42:54Z",
          "updatedAt": "2023-11-14T18:42:54Z"
        }
      ]
    },
    {
      "number": 41,
      "id": "I_kwDOJ7sZWc52FRZh",
      "title": "Utility measure for comparing central vs local DP policies",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/41",
      "state": "OPEN",
      "author": "bmcase",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I'd like to clarify how we're thinking about measuring the utility difference between the DP policies.  In section 6.1 it says\r\n> We discover that both policies in different settings of EPSILON and DELTA provide comparable utility. \r\n\r\nAnd in section 6.1.1.1. There is a table looking at utility in terms of standard deviation of the final noise for varying local epsilon and fixed n. To me it would seem the key to seeing how to compare utility between these two settings is to vary n (the number of clients). But the table in section 6.1.1.1.1 maintains a fixed n.  I think it would be nice to see how this changes for varying n: e.g. 1k, 10k, 100k, 1M, 10M and see how this compares to central DP. \r\n",
      "createdAt": "2023-11-07T11:02:34Z",
      "updatedAt": "2023-11-14T16:24:34Z",
      "closedAt": null,
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Sounds good. We will provide more numbers with different `n`.",
          "createdAt": "2023-11-14T16:24:34Z",
          "updatedAt": "2023-11-14T16:24:34Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "I_kwDOJ7sZWc52FWLi",
      "title": "Budget management",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/42",
      "state": "OPEN",
      "author": "bmcase",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "This is more of an open end set of thoughts about how much budget management to do in DAP.  \r\n\r\nAppendix B.4 talk about this topic and mentions that different use cases will have different settings and requirements for budget management which I totally agree with.  It is also mentioned that clients are likely the ones enforcing the budget which I agree is usually how I think about this setting of VDAFs. \r\n\r\nIf clients are enforcing the budget, one way this could work is that a report comes specifying how much budget can be used against it. The aggregation service would then need to enforce this across all the different outputs this report may contribute to.  For example, you might have a report that contributes to different histograms breaking down the data in different ways, if there are many histograms you'll want to do the advanced composition methods you've mentioned like Renyi DP for internal budget tracking.  Also good to consider here is how this works with replay protection; the easiest way is to only allow a report to be queried once but at that time contribute to a higher dimension set of outputs.  \r\n\r\nAnother related question on the topic of budget management is considering how the budget refreshes, e.g. different epochs.  We should consider handling aggregation that would have reports from multiple epochs.   ",
      "createdAt": "2023-11-07T11:13:47Z",
      "updatedAt": "2023-11-07T11:13:47Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOJ7sZWc5Vklra",
      "title": "Add the first skeleton",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/1",
      "state": "MERGED",
      "author": "wangshan",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-15T02:50:08Z",
      "updatedAt": "2023-07-15T02:59:30Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "bea996ecd05945e769bc255138af2d7f5f30863f",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "skeleton",
      "headRefOid": "2f8973f6e89f27f4c46b9dd0451522dff0124469",
      "closedAt": "2023-07-15T02:59:30Z",
      "mergedAt": "2023-07-15T02:59:30Z",
      "mergedBy": "wangshan",
      "mergeCommit": {
        "oid": "8dbd77bf25dcf7183c530ea1d5ba4a5d9fcac7bd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOJ7sZWc5VnAzp",
      "title": "Paper citations that we will need",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/2",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-16T14:42:41Z",
      "updatedAt": "2023-07-17T16:00:43Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "8dbd77bf25dcf7183c530ea1d5ba4a5d9fcac7bd",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/paper-citations",
      "headRefOid": "3a3b4f659712f43779e278d018d1e7a804202bc9",
      "closedAt": "2023-07-17T16:00:42Z",
      "mergedAt": "2023-07-17T16:00:42Z",
      "mergedBy": "wangshan",
      "mergeCommit": {
        "oid": "dc9c4f0449b019ff2ac73db9f55fd898ce7a9790"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bYdqg",
          "commit": {
            "abbreviatedOid": "3a3b4f6"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "LGTN",
          "createdAt": "2023-07-17T16:00:20Z",
          "updatedAt": "2023-07-17T16:00:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOJ7sZWc5VnA32",
      "title": "Define possible DP guarantees, and their respective composition theor\u2026",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/3",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026ems for DP budgeting\r\n\r\nReviewer Note: stacked PR on #2 ",
      "createdAt": "2023-07-16T14:43:50Z",
      "updatedAt": "2023-07-20T20:22:28Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "junyec/paper-citations",
      "baseRefOid": "3a3b4f659712f43779e278d018d1e7a804202bc9",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/dp-budget",
      "headRefOid": "c825bab259d4a3c21ca5aecb0e29b5edb45c558f",
      "closedAt": "2023-07-17T22:43:22Z",
      "mergedAt": "2023-07-17T22:43:22Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "a3ce8c72bd6c09aceda1687e8a89d29220c2150f"
      },
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "> In addition to pointing to formal definitions of DP notions, we should provide informal definitions that help develop the reader's intuition.\r\n\r\nI tried to provide some intuitions for each DP guarantees. Let me know if this is better.",
          "createdAt": "2023-07-17T22:10:54Z",
          "updatedAt": "2023-07-17T22:10:54Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "> > In addition to pointing to formal definitions of DP notions, we should provide informal definitions that help develop the reader's intuition.\r\n> \r\n> I tried to provide some intuitions for each DP guarantees. Let me know if this is better.\r\n\r\nMuch better, but what I want us to be able to do is answer the following question: Why would one choose some notion of DP over another? Are there certain restrictions/requirements that prevent us from obtaining one but not anohter?",
          "createdAt": "2023-07-17T22:23:42Z",
          "updatedAt": "2023-07-17T22:23:42Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Oops :( my bad I forgot to check the base before merging.",
          "createdAt": "2023-07-17T22:45:04Z",
          "updatedAt": "2023-07-17T22:45:04Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged into main.",
          "createdAt": "2023-07-17T22:46:06Z",
          "updatedAt": "2023-07-17T22:46:06Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks! I rebased to main, but also forgot to change the target branch.",
          "createdAt": "2023-07-17T22:48:49Z",
          "updatedAt": "2023-07-17T22:48:49Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "> but what I want us to be able to do is answer the following question: Why would one choose some notion of DP over another? Are there certain restrictions/requirements that prevent us from obtaining one but not anohter?\r\n\r\nGood point, we can do better. I filed #6 to track this ",
          "createdAt": "2023-07-17T22:52:05Z",
          "updatedAt": "2023-07-17T22:52:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bYwDq",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T16:38:59Z",
          "updatedAt": "2023-07-17T16:38:59Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Unfortunately unicode characters are not supported by IETF's tooling: https://wangshan.github.io/draft-wang-ppm-differential-privacy/junyec/dp-budget/draft-wang-ppm-differential-privacy.html#name-pure-1013-dp-or-1013948-app",
              "createdAt": "2023-07-17T16:38:59Z",
              "updatedAt": "2023-07-17T16:38:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bYwQJ",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T16:39:17Z",
          "updatedAt": "2023-07-17T16:39:17Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I'd suggest names like `EPSILON` and `DELTA`.",
              "createdAt": "2023-07-17T16:39:17Z",
              "updatedAt": "2023-07-17T16:39:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bYySG",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T16:43:03Z",
          "updatedAt": "2023-07-17T16:43:04Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "In my opinion this is too long of an authors list to be useful as a reference. I'd suggest truncating to the top three or four authors (and make sure to be consistent throughout the doc.)",
              "createdAt": "2023-07-17T16:43:03Z",
              "updatedAt": "2023-07-17T16:43:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bYygB",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T16:43:27Z",
          "updatedAt": "2023-07-17T16:43:28Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "E.g., {{MJTBp22}}, where \"p\" stands for \"plus\"",
              "createdAt": "2023-07-17T16:43:27Z",
              "updatedAt": "2023-07-17T16:43:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bZDr7",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "LG,\r\n\r\nOne thing we can discuss later: is budget a MUST for client or SHOULD , if it\u2019s a must then do we need to spell out exactly how it\u2019s done?",
          "createdAt": "2023-07-17T17:17:32Z",
          "updatedAt": "2023-07-17T17:18:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5bZQ-T",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "In addition to pointing to formal definitions of DP notions, we should provide informal definitions that help develop the reader's intuition.",
          "createdAt": "2023-07-17T17:46:05Z",
          "updatedAt": "2023-07-17T17:49:03Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Can we reframe this in the DAP context? \"Federated machine learning applications require multiple aggregates to be computed over the same underlying data.\"",
              "createdAt": "2023-07-17T17:46:05Z",
              "updatedAt": "2023-07-17T17:49:03Z"
            },
            {
              "originalPosition": 24,
              "body": "I don't think a normative \"MUST\" isn't appropriate here since we're not talking about a concrete enforcement mechanism yet. I would just write \"must\".",
              "createdAt": "2023-07-17T17:47:26Z",
              "updatedAt": "2023-07-17T17:49:03Z"
            },
            {
              "originalPosition": 41,
              "body": "Wrap lines at 80 characters",
              "createdAt": "2023-07-17T17:47:50Z",
              "updatedAt": "2023-07-17T17:49:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba4z4",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T22:09:12Z",
          "updatedAt": "2023-07-17T22:09:12Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Fixed all the unicode characters.",
              "createdAt": "2023-07-17T22:09:12Z",
              "updatedAt": "2023-07-17T22:09:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba42E",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T22:09:22Z",
          "updatedAt": "2023-07-17T22:09:22Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Done.",
              "createdAt": "2023-07-17T22:09:22Z",
              "updatedAt": "2023-07-17T22:09:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba48W",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T22:09:51Z",
          "updatedAt": "2023-07-17T22:09:51Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Rephrased it, and added \"with different machine learning model parameters\".",
              "createdAt": "2023-07-17T22:09:51Z",
              "updatedAt": "2023-07-17T22:09:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba5CU",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T22:10:21Z",
          "updatedAt": "2023-07-17T22:10:21Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "This line is ok, but I changed a couple of other places that have more than 80 characters.",
              "createdAt": "2023-07-17T22:10:21Z",
              "updatedAt": "2023-07-17T22:10:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba8cY",
          "commit": {
            "abbreviatedOid": "c825bab"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-17T22:22:38Z",
          "updatedAt": "2023-07-17T22:22:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOJ7sZWc5VnE_K",
      "title": "Describe DpMechanism interface - how noise mechanisms should generate noise",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/4",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Note to reviewers: this is stacked PR on #2 .",
      "createdAt": "2023-07-16T15:54:14Z",
      "updatedAt": "2023-07-25T00:52:24Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "c0d7bdb3fad79d39a7dc9f5027b5357725377842",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/dp-mechanism",
      "headRefOid": "48f20b01455a0253b3602801bfeb83815b4a8eab",
      "closedAt": "2023-07-20T23:15:42Z",
      "mergedAt": "2023-07-20T23:15:42Z",
      "mergedBy": "junyechen1996",
      "mergeCommit": {
        "oid": "14d8b5f331b926c36ebdb5da723bf33526033790"
      },
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Reviewers, I try to take into account of suggestions from both of you, following changes are proposed:\r\n\r\n- I moved the previous `DpMechanism` interface into `DpPrimitive`, I think those interfaces make sense for DP primitives, i.e. they don't know about measurement vs aggregate share. I have some initial texts for DP primitives and their functionalities, but haven't described a concrete example.\r\n- I proposed `ClientDpMechanism` and `AggregatorDpMechanism`. I think `DpPrimitive.add_noise` itself won't always work for both measurement and aggregate share, which could be of different types. It's also more error proof when one tries to instantiate it, related to the discussion in [this comment](https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/4#discussion_r1266142207).\r\n- I described the RR Client-DP and Aggregator-DP mechanisms in details. Let me know if it's informative.\r\n\r\nI force pushed by accident during rebasing, but I think the new version of PR is quite different from the previous one. Let me know of additional feedbacks.",
          "createdAt": "2023-07-19T16:32:20Z",
          "updatedAt": "2023-07-19T16:32:20Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "squashed, going to merge.",
          "createdAt": "2023-07-20T23:14:44Z",
          "updatedAt": "2023-07-20T23:14:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bZHUq",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T17:23:54Z",
          "updatedAt": "2023-07-17T17:23:54Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Noise mechanisms and DP mechanisms are mixed, we should stick to one of them, I\u2019d vote for DP mechanisms ",
              "createdAt": "2023-07-17T17:23:54Z",
              "updatedAt": "2023-07-17T17:23:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bZIv4",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T17:26:29Z",
          "updatedAt": "2023-07-17T17:26:30Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Avoid mentioning local randomizer unless we are gonna explain it",
              "createdAt": "2023-07-17T17:26:29Z",
              "updatedAt": "2023-07-17T17:26:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bbyoh",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T02:33:54Z",
          "updatedAt": "2023-07-18T03:17:11Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "How about \r\n```suggestion\r\n    def remove_noise_from_result(self,\r\n```",
              "createdAt": "2023-07-18T02:33:54Z",
              "updatedAt": "2023-07-18T03:17:11Z"
            },
            {
              "originalPosition": 50,
              "body": "IIUC this would be called by add_noise, i.e., is more of a DP primitive than a DP mechanism. Can we rename it?",
              "createdAt": "2023-07-18T03:13:53Z",
              "updatedAt": "2023-07-18T03:17:11Z"
            },
            {
              "originalPosition": 46,
              "body": "Add noise into what, the measurement or the aggregate share? How do we know when to call this?\r\n\r\nI think it would be worth splitting this class into `ClientDpMechanism` and `AggregatorDpMechanism`.",
              "createdAt": "2023-07-18T03:14:59Z",
              "updatedAt": "2023-07-18T03:17:11Z"
            },
            {
              "originalPosition": 32,
              "body": "Is this needed at this level of abstraction? IIUC sample_noise would be called by an implementation of add_noise and so seems like an implementation detail here.\r\n\r\n",
              "createdAt": "2023-07-18T03:16:26Z",
              "updatedAt": "2023-07-18T03:17:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biR5N",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T18:57:41Z",
          "updatedAt": "2023-07-18T18:57:41Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "The set of local DP noises we have in mind don't remove noise completely, e.g. see Algorithm 2 and Algorithm 4 in [{{MJTBp22}}](https://arxiv.org/abs/2004.00010), the aggregate result will still have noise, with some standard deviation. I think `debias` is a better term because it is \"removing\" the positive bias added in the local DP.",
              "createdAt": "2023-07-18T18:57:41Z",
              "updatedAt": "2023-07-18T18:57:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biSqt",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:00:01Z",
          "updatedAt": "2023-07-18T19:00:01Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "I think this gives caller flexibility to encode the returned noise differently, e.g. when sampling noise in the VDAF setting, one will sample the noise with this method, and then encode it to into field elements. To take DiscreteGaussian as an example, the returned data is an array of signed integers, and there is another step that converts the negative values to the back end of field modulus (e.g. -1 to `q-1`, where `q` is field modulus).",
              "createdAt": "2023-07-18T19:00:01Z",
              "updatedAt": "2023-07-18T19:00:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biTV_",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:02:03Z",
          "updatedAt": "2023-07-18T19:02:04Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I am trying to explain why `sample_noise` exists, related to the reason that I explained here: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/4#discussion_r1267188326",
              "createdAt": "2023-07-18T19:02:03Z",
              "updatedAt": "2023-07-18T19:02:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biUUN",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:05:02Z",
          "updatedAt": "2023-07-18T19:05:02Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Currently I was going for both, adding noise into measurement or aggregate share, because the noise itself doesn't know about measurement or aggregate share. Assume we turn this PR into tackling primitives instead after #9 is merged, a noise primitive should just have the flexibility of adding noise to data directly, or sampling noise that allows caller to perform future operations on it.",
              "createdAt": "2023-07-18T19:05:02Z",
              "updatedAt": "2023-07-18T19:05:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biWQg",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:11:12Z",
          "updatedAt": "2023-07-18T19:11:12Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Ahh right, \"remove noise\" is not a good term. How about \"remove bias\"? The problem I'm trying to solve is that \"debias\" doesn't look like \"de-bias\" to me, it looks like \"deebee-ass\" :D",
              "createdAt": "2023-07-18T19:11:12Z",
              "updatedAt": "2023-07-18T19:11:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biZwR",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:18:32Z",
          "updatedAt": "2023-07-18T19:20:30Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "\r\n> Currently I was going for both, adding noise into measurement or aggregate share, because the noise itself doesn't know about measurement or aggregate share.\r\n\r\nI see. In my opinion these should be split into two different classes, as this results in the simplest, most misuse-resistant API surface. Consider an implementation that incorrectly uses a `DpMechanism` intended for Client-DP as a mechanism for Aggregator-DP: Could this result in the aggregate result not being DP, for some definition of DP? In particular, don't we have to tune the sensitivity differently in each case?\r\n\r\n> Assume we turn this PR into tackling primitives instead after #9 is merged, a noise primitive should just have the flexibility of adding noise to data directly, or sampling noise that allows caller to perform future operations on it.\r\n\r\nRemember, by \"primitive\" I mean low-level algorithms used to build DP mechanisms. I think this PR should focus on the interface for the latter (DP mechanisms).\r\n\r\n",
              "createdAt": "2023-07-18T19:18:32Z",
              "updatedAt": "2023-07-18T19:20:30Z"
            },
            {
              "originalPosition": 50,
              "body": "Think of discrete guassian as a primitive that we use to implement `add_noise_to_agg_share()` or `add_noise_to_measurement()`. We would invoke that primitive in both of these methods, then do any postprocessing that's needed to fit with the VDAF. Does that make sense?\r\n",
              "createdAt": "2023-07-18T19:20:20Z",
              "updatedAt": "2023-07-18T19:20:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bj3Gv",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T01:52:08Z",
          "updatedAt": "2023-07-19T01:52:09Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "The idea is adding noise to measurement and adding noise to aggregate share are fundamentally the same operation, having two classes is an implementation detail. We can also have generic add_noise function that applies to Measurement and AggShare types.",
              "createdAt": "2023-07-19T01:52:09Z",
              "updatedAt": "2023-07-19T01:52:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bj3qy",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T01:56:03Z",
          "updatedAt": "2023-07-19T01:56:04Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Debias has been used in referenced literatures so it should be clear to readers, remove_bias would do too but I don\u2019t know if we can avoid mentioning debias",
              "createdAt": "2023-07-19T01:56:03Z",
              "updatedAt": "2023-07-19T01:56:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bpDL3",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T16:25:55Z",
          "updatedAt": "2023-07-19T16:25:55Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Removed local randomizer, instead call it Client-DP.",
              "createdAt": "2023-07-19T16:25:55Z",
              "updatedAt": "2023-07-19T16:25:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bpDWr",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T16:26:08Z",
          "updatedAt": "2023-07-19T16:26:08Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Changed all to DP mechanisms",
              "createdAt": "2023-07-19T16:26:08Z",
              "updatedAt": "2023-07-19T16:26:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bpD0R",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T16:27:04Z",
          "updatedAt": "2023-07-19T16:27:04Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Sticking with `debias` for now. We can always change it to `remove_bias` if others feel it is better as well.",
              "createdAt": "2023-07-19T16:27:04Z",
              "updatedAt": "2023-07-19T16:27:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bpGMT",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T16:33:08Z",
          "updatedAt": "2023-07-19T16:33:08Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Sounds good, moved those logic into `DpMechanism`. `DpPrimitive`'s `sample_noise` will only deal with generating noise.",
              "createdAt": "2023-07-19T16:33:08Z",
              "updatedAt": "2023-07-19T16:33:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bq-su",
          "commit": {
            "abbreviatedOid": "c4cb469"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T20:45:23Z",
          "updatedAt": "2023-07-19T21:03:45Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Matching terminology in the DAP/VDAF specs helps avoid ambiguity.\r\n\r\n```suggestion\r\n* Add noise to a piece of input data (i.e., a measurement or aggregate share). Some DP primitives apply noise based on\r\n```",
              "createdAt": "2023-07-19T20:45:23Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\n* Sample noise using one of the primitives in {{primitives}}.\r\n```",
              "createdAt": "2023-07-19T20:45:57Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            },
            {
              "originalPosition": 23,
              "body": "We should refer to our own spec instead of the appendix of a paper.",
              "createdAt": "2023-07-19T20:46:13Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            },
            {
              "originalPosition": 30,
              "body": "\"Client-DP noises\"? Do you mean mechanism?",
              "createdAt": "2023-07-19T20:46:45Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            },
            {
              "originalPosition": 46,
              "body": "The add_noise function that is common would be specified in {{primitives}}; in this section, we would say how the primitive is used in a particular Client-DP mechanism or Aggregator-DP mechanism.",
              "createdAt": "2023-07-19T20:48:03Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5brcVp",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T22:09:40Z",
          "updatedAt": "2023-07-19T22:09:41Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "@junyechen1996 and I discussed offline and converged on the idea of a single, unified `DpMechanism` interface. It turns out that this is really the only viable choice, as there are mechanisms that involve both client and aggregator adding noise, but for which the client bits and aggreagtor bits aren't secure on their own. Thus they MUST be unified.",
              "createdAt": "2023-07-19T22:09:40Z",
              "updatedAt": "2023-07-19T22:09:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5brv68",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T23:39:40Z",
          "updatedAt": "2023-07-19T23:42:34Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Done.",
              "createdAt": "2023-07-19T23:39:40Z",
              "updatedAt": "2023-07-19T23:42:35Z"
            },
            {
              "originalPosition": 120,
              "body": "@cjpatton I changed it back to `min_batch_size`, because I think `batch_size` might mean the actual batch size.",
              "createdAt": "2023-07-19T23:40:06Z",
              "updatedAt": "2023-07-19T23:42:35Z"
            },
            {
              "originalPosition": 211,
              "body": "This is the tricky part about debiasing, when there is composition of Client-DP and Aggregator-DP.",
              "createdAt": "2023-07-19T23:40:47Z",
              "updatedAt": "2023-07-19T23:42:35Z"
            },
            {
              "originalPosition": 233,
              "body": "We haven't fully specified discrete Gaussian primitive, so leaving it as an initialized parameter. But once we have something for discrete Gaussian, we can update both here and for randomized response.",
              "createdAt": "2023-07-19T23:42:32Z",
              "updatedAt": "2023-07-19T23:42:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bry77",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T23:53:55Z",
          "updatedAt": "2023-07-19T23:53:56Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "Let's use the terms \"client noise\" and \"aggregator noise\"; we don't want to conflate the \"process\" (adding noise) with the \"result\" (DP)",
              "createdAt": "2023-07-19T23:53:55Z",
              "updatedAt": "2023-07-19T23:53:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5br2m1",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-20T00:07:47Z",
          "updatedAt": "2023-07-20T00:08:45Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "nit: I think it's safe to assume that AggregateResult and DebiasedAggregateResult are always the same.",
              "createdAt": "2023-07-20T00:07:47Z",
              "updatedAt": "2023-07-20T00:08:45Z"
            },
            {
              "originalPosition": 233,
              "body": "SGTM. Just put a TODO here, and maybe link to the #10 .",
              "createdAt": "2023-07-20T00:08:21Z",
              "updatedAt": "2023-07-20T00:08:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bsmj7",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T04:46:23Z",
          "updatedAt": "2023-07-20T04:46:24Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "One difference is when the aggregate result is [integer] and DebiasedAggregateResult is [float]",
              "createdAt": "2023-07-20T04:46:23Z",
              "updatedAt": "2023-07-20T04:46:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bsm6j",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T04:48:22Z",
          "updatedAt": "2023-07-20T04:48:22Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "I don\u2019t think we should have maybe in the interface, the fact it\u2019s optional is something the implementation language should handle",
              "createdAt": "2023-07-20T04:48:22Z",
              "updatedAt": "2023-07-20T04:48:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bsnk0",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T04:52:03Z",
          "updatedAt": "2023-07-20T04:52:03Z",
          "comments": [
            {
              "originalPosition": 230,
              "body": "DebiasedAggregateResult = AggregateResult\r\nto make it more clean",
              "createdAt": "2023-07-20T04:52:03Z",
              "updatedAt": "2023-07-20T04:52:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxgUd",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:54:46Z",
          "updatedAt": "2023-07-20T16:54:46Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Oh, OK! Couldn't the aggreagte result also be a float?",
              "createdAt": "2023-07-20T16:54:46Z",
              "updatedAt": "2023-07-20T16:54:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxgZv",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:55:01Z",
          "updatedAt": "2023-07-20T16:55:02Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "SGTM.",
              "createdAt": "2023-07-20T16:55:02Z",
              "updatedAt": "2023-07-20T16:55:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxg0a",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:56:10Z",
          "updatedAt": "2023-07-20T16:56:10Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "(Adjusted in slides.)",
              "createdAt": "2023-07-20T16:56:10Z",
              "updatedAt": "2023-07-20T16:56:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxsfW",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T17:26:47Z",
          "updatedAt": "2023-07-20T17:41:39Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Currently `Prio3FixedPointBoundedL2VecSum` uses aggregate result as an array of float, so that could be the case. And there is nothing needed in debiasing.",
              "createdAt": "2023-07-20T17:26:47Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 108,
              "body": "Updated PR as well to `add_client_dp`, `add_aggregator_dp`, and `debias_aggregate_result`.",
              "createdAt": "2023-07-20T17:27:11Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 211,
              "body": "I didn't explicitly explain Client-DP and Aggregator-DP noise in this function's comments. Is there anything else that I missed?",
              "createdAt": "2023-07-20T17:28:56Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 230,
              "body": "Done.",
              "createdAt": "2023-07-20T17:29:02Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 233,
              "body": "Done.",
              "createdAt": "2023-07-20T17:37:38Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 22,
              "body": "Missed this one, but done.",
              "createdAt": "2023-07-20T17:38:30Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 30,
              "body": "Done.",
              "createdAt": "2023-07-20T17:38:38Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxy4g",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T17:45:08Z",
          "updatedAt": "2023-07-20T17:45:08Z",
          "comments": [
            {
              "originalPosition": 168,
              "body": "@cjpatton Is it worth being explicit here (`debias_aggregate_result` vs `debias`), if the argument takes in an aggregate result? If you think it's good, then the slides need update. Otherwise, I can revert it.",
              "createdAt": "2023-07-20T17:45:08Z",
              "updatedAt": "2023-07-20T17:45:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzNEJ",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:01:10Z",
          "updatedAt": "2023-07-20T22:01:10Z",
          "comments": [
            {
              "originalPosition": 168,
              "body": "Good catch, yes debias_aggregate_result is better IMO. Fixing the slides.",
              "createdAt": "2023-07-20T22:01:10Z",
              "updatedAt": "2023-07-20T22:01:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzNIQ",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:01:27Z",
          "updatedAt": "2023-07-20T22:01:27Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "LGTM",
              "createdAt": "2023-07-20T22:01:27Z",
              "updatedAt": "2023-07-20T22:01:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzNP0",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:02:00Z",
          "updatedAt": "2023-07-20T22:02:01Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I suggest having one type for now until we need the flexibility.",
              "createdAt": "2023-07-20T22:02:00Z",
              "updatedAt": "2023-07-20T22:02:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzWDQ",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:30:04Z",
          "updatedAt": "2023-07-20T22:30:04Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I think `AggregateResult` is a term defined in VDAF draft. For `Prio3SumVec`, it is an array of unsigned integers. If RR is used, Collector needs to debias aggregate result, which will turn it from an array of unsigned integers to an array of floats. It seems like the distinction is needed here?",
              "createdAt": "2023-07-20T22:30:04Z",
              "updatedAt": "2023-07-20T22:30:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzXWp",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:32:44Z",
          "updatedAt": "2023-07-20T22:32:44Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Why should that be the case? If what we want is vector of sums, then we'd expect integers wouldn't we? Why convert them to floats?",
              "createdAt": "2023-07-20T22:32:44Z",
              "updatedAt": "2023-07-20T22:32:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzc7M",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:42:13Z",
          "updatedAt": "2023-07-20T22:42:13Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Because the arithmetic operations in debiasing results in floats, see Appendix A.2 in https://arxiv.org/pdf/2211.10082.pdf, and also could result in negative values. So for Prio3SumVec for example, aggregate result is an array of *unsigned* integers, debiased aggregate result needs to be at least an array of *signed* integers, or floats.",
              "createdAt": "2023-07-20T22:42:13Z",
              "updatedAt": "2023-07-20T22:42:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzgF_",
          "commit": {
            "abbreviatedOid": "56c039a"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:55:29Z",
          "updatedAt": "2023-07-20T22:56:58Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "@cjpatton Added `num_aggregators` parameter in this method, which is needed by `Prio3SumVecWithRandomizedResponse`.",
              "createdAt": "2023-07-20T22:55:29Z",
              "updatedAt": "2023-07-20T22:56:59Z"
            },
            {
              "originalPosition": 167,
              "body": "Using `Vec` and `Unsigned` to be consistent with VDAF draft.",
              "createdAt": "2023-07-20T22:55:52Z",
              "updatedAt": "2023-07-20T22:56:59Z"
            },
            {
              "originalPosition": 234,
              "body": "There is some small caveat about the aggregate result type for `Prio3Histogram` with discrete Gaussian, because discrete Gaussian can sample negative noise, so it's possible that aggregate result becomes negative. In the Field world, it is at the tail end of field modulus.",
              "createdAt": "2023-07-20T22:56:51Z",
              "updatedAt": "2023-07-20T22:56:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzhTu",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T23:01:53Z",
          "updatedAt": "2023-07-20T23:01:53Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Ack. OK, let's kep it then",
              "createdAt": "2023-07-20T23:01:53Z",
              "updatedAt": "2023-07-20T23:01:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzhqK",
          "commit": {
            "abbreviatedOid": "48f20b0"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I didn't manage a thorough review, but I think this is definitely good enough for now! \ud83d\udea2 ",
          "createdAt": "2023-07-20T23:03:51Z",
          "updatedAt": "2023-07-20T23:12:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOJ7sZWc5VnFbn",
      "title": "Define DP policy - how Aggregators should enforce privacy guarantee b\u2026",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/5",
      "state": "CLOSED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026efore outputting aggregate share\r\n\r\n- Note to reviewers: this is a stacked PR on top of #2 and #4 .",
      "createdAt": "2023-07-16T16:01:36Z",
      "updatedAt": "2023-10-19T17:58:39Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "junyec/dp-mechanism",
      "baseRefOid": "c4cb46900c66a996182d7a1fc32721f903ec0009",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/dp-policy",
      "headRefOid": "41bb8610d26557152026d58a44c42c8bf72d1c52",
      "closedAt": "2023-07-20T18:17:05Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Will get to reviewing this today, at the moment I'm catching up.",
          "createdAt": "2023-07-17T17:51:58Z",
          "updatedAt": "2023-07-17T17:51:58Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "of course at this stage feel free to merge without my approval :) ",
          "createdAt": "2023-07-17T18:00:19Z",
          "updatedAt": "2023-07-17T18:00:19Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "> of course at this stage feel free to merge without my approval :)\r\n\r\nYes please feel free to leave reviews :)  I wasn't able to add you before, probably because you haven't accepted the invitation.",
          "createdAt": "2023-07-17T22:12:43Z",
          "updatedAt": "2023-07-17T22:12:43Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Sounds good, filed https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/12 and closing this.",
          "createdAt": "2023-07-20T18:17:01Z",
          "updatedAt": "2023-07-20T18:17:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bZMrC",
          "commit": {
            "abbreviatedOid": "41bb861"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-17T17:37:07Z",
          "updatedAt": "2023-07-17T17:37:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5bb4Po",
          "commit": {
            "abbreviatedOid": "41bb861"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I don't think the current abstraction (`DpPolicy`) is all that helpful: you define the method, but you don't actually implement it anywhere.\r\n\r\nProposal: I think what this section should do is describe how to compose an optional Client-DP mechanism with an optional Aggregator-DP mechanism in DAP. \r\n\r\nI like how you've laid out the different sections for Client behavior, Aggregator behavior, and Collector behavior. A DP policy might consist of a pair `Optional[ClientDpMechanism], Optional[AggregatorDpMechanism]` (see https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/4#discussion_r1266142207); in these sections we would say when we call each of the methods on `ClientDpMechanism` and `AggregatorDpMechanism`.",
          "createdAt": "2023-07-18T03:01:26Z",
          "updatedAt": "2023-07-18T03:26:46Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "How about \"Client-DP\" rather than \"Local-DP\"?\r\n\r\nWe started saying \"Aggregator-DP\" instead of \"Central-DP\" due to the taxonomy in https://petsymposium.org/popets/2023/popets-2023-0086.pdf. We would say \"Client-DP\" rather than \"Local-DP\" to be consistent. \r\n\r\nI guess I don't have a strong opinion about which set of terms to use, so long as we're consistent.",
              "createdAt": "2023-07-18T03:01:26Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n  aggregation of Clients' measurements with local DP noise with pure-DP guarantee.\r\n```",
              "createdAt": "2023-07-18T03:02:43Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 12,
              "body": "Pointers to analysis is useful in security considerations, but at this point all we really care about is intuition for what we get. Is the primary motivation is to be able to aggregate a batch that is not yet \"full\"? Are there any other benefits?",
              "createdAt": "2023-07-18T03:10:57Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 57,
              "body": "This section must answer the question: Why is composing Client- and Aggregator-DP useful? ",
              "createdAt": "2023-07-18T03:12:45Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 59,
              "body": "```suggestion\r\nFor example, {{FMT20}} and {{FMT22}} rely on privacy amplification by aggregation\r\n```",
              "createdAt": "2023-07-18T03:17:51Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 59,
              "body": "What does \"privacy amplification\" mean?",
              "createdAt": "2023-07-18T03:18:05Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 65,
              "body": "You'll need to describe how and why this works at a high level.",
              "createdAt": "2023-07-18T03:19:19Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 75,
              "body": "This paragraph ends with a \":\", which is grammatically incorrect.",
              "createdAt": "2023-07-18T03:19:48Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5brehZ",
          "commit": {
            "abbreviatedOid": "41bb861"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "After speaking to @junyechen1996 offline, it sounds to me that the intention of a \"DP policy\" is to enable collecting a batch before the batch bounds are satisfied (i.e., the `min_batch_size` is met) *as long as* the `DpMechanism` provides sufficient privacy. (In this case we sacrifice utility, but don't lose privacy.) This sounds like a reasonable optimization for DAP, but I'd like to suggest that we don't push for it in the initial draft, as it it's a harder sell than the main motivation for combining client and aggregator noise.\r\n\r\nI suggest we close this PR and file an issue describing the optimization. That way we remember to bring it back up in the future. WDYT @wangshan ?",
          "createdAt": "2023-07-19T22:21:01Z",
          "updatedAt": "2023-07-19T22:21:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOJ7sZWc5VvPyY",
      "title": "Add intro and revise the layout",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/9",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Summary of structural changes:\r\n\r\n* Rename {#primitives} to {#overview}. This section describes the \"DP landscape\" in the literature applicable to VDAF and what is achievable with(out) DAP. (These things aren't really \"primitives\": A \"primitive\" is more like an algorithm.)\r\n\r\n* Split {#dp mechanism} into {#primitives} (the \"nuts and bolts\" for building DP mechanisms, like Laplace and Gaussian) and {#mechanisms}, which specifies Client- and Aggregator-DP mechanisms.\r\n\r\n* Rename {#dp policy} to {#policy} and scope the section to DAP. This section now describes a particular composition of a Client-DP mechanism with an Aggregator-DP mechanism in DAP. (We call this pair of mechanisms a \"DP policy\".)\r\n\r\nA few other minor changes:\r\n\r\n* Update DAP/VDAF draft references to the latest\r\n\r\n* Add reference to {{Dwo06}} and cite it in the intro\r\n\r\n* Update title in README",
      "createdAt": "2023-07-18T04:03:43Z",
      "updatedAt": "2023-07-18T20:36:25Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "c825bab259d4a3c21ca5aecb0e29b5edb45c558f",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/first-pass",
      "headRefOid": "6342768eefa921f4c3eabb0145b3c482e1fe50a6",
      "closedAt": "2023-07-18T20:36:25Z",
      "mergedAt": "2023-07-18T20:36:25Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "997e81493ffa9ab020fd4e79025ca6d80f0b8b51"
      },
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Squashed.",
          "createdAt": "2023-07-18T20:33:18Z",
          "updatedAt": "2023-07-18T20:33:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bcLRi",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T04:04:27Z",
          "updatedAt": "2023-07-18T04:04:28Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "@junyechen1996 this is how I suggested we define \"DP policy\" in https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/5#pullrequestreview-1534034920.",
              "createdAt": "2023-07-18T04:04:27Z",
              "updatedAt": "2023-07-18T04:04:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bcLlT",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T04:06:25Z",
          "updatedAt": "2023-07-18T04:06:25Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Is this a good reference or would you guys prefer something else? I don't have a strong opinion here, I just picked this one because it originally formalized DP.",
              "createdAt": "2023-07-18T04:06:25Z",
              "updatedAt": "2023-07-18T04:06:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bcLvj",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T04:07:26Z",
          "updatedAt": "2023-07-18T04:07:27Z",
          "comments": [
            {
              "originalPosition": 166,
              "body": "@junyechen1996 what are examples of these?",
              "createdAt": "2023-07-18T04:07:26Z",
              "updatedAt": "2023-07-18T04:07:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bh4om",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Makes sense to me. I think the current \"mechanism\" in this draft probably fits better under \"primitives\" after this PR. But I think using \"mechanism\" to talk about applicability of primitives on VDAFs makes sense. Would love @wangshan 's opinion as well.",
          "createdAt": "2023-07-18T17:47:58Z",
          "updatedAt": "2023-07-18T18:44:42Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\n{{!VDAF=I-D.draft-irtf-cfrg-vdaf-06}}, the core cryptographic component of DAP.\r\n```",
              "createdAt": "2023-07-18T17:47:58Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 53,
              "body": "I think either {{Dwo06}} or {{DMNS06}} is good.",
              "createdAt": "2023-07-18T17:50:26Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 72,
              "body": "Don't think we will add collector-DP for now, because Collector would have unsharded the aggregate shares, and it defeats the purpose of secure aggregation. We can leave it in TODO though.",
              "createdAt": "2023-07-18T17:53:40Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 118,
              "body": "I see your point. The current #4 probably fits under {{primitives}} better. It doesn't mean to be coupled with a specific VDAF yet. I can rebase once you merge this one.",
              "createdAt": "2023-07-18T18:23:40Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 111,
              "body": "```suggestion\r\n   reduce the veracity of the result. This document provides no guidance for\r\n```",
              "createdAt": "2023-07-18T18:24:23Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\n1. Apart from privacy, the primary consideration for choosing a DP policy and\r\n```",
              "createdAt": "2023-07-18T18:24:39Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 166,
              "body": "The earliest paper is probably the one from Google: https://arxiv.org/abs/1407.6981, we haven't cited that one here. [This paper](https://arxiv.org/abs/2211.10082) ({{MJTBp22}}) also talks about two instantiations, one for replacement-DP setting in Appendix A, and one for deletion-DP setting in Appendix C. ",
              "createdAt": "2023-07-18T18:31:14Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 158,
              "body": "For discrete Laplace and Gaussian, we can probably point people to [{{CKS20}}](https://arxiv.org/abs/2004.00010). Do we need to specify any PRG requirement for the sampler as well? e.g. how to derive seed, etc.",
              "createdAt": "2023-07-18T18:33:43Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 173,
              "body": "So in this part we would specify some interface the like `Vdaf.add_noise_to_agg_share` experimental API in libprio today?",
              "createdAt": "2023-07-18T18:38:08Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 174,
              "body": "This sentence is not finished?",
              "createdAt": "2023-07-18T18:40:40Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biR9P",
          "commit": {
            "abbreviatedOid": "bcf01b8"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T18:57:52Z",
          "updatedAt": "2023-07-18T19:08:51Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Changed to {{DMNS06}} so that we don't have more references than we need.",
              "createdAt": "2023-07-18T18:57:52Z",
              "updatedAt": "2023-07-18T19:08:51Z"
            },
            {
              "originalPosition": 72,
              "body": "Right, it's maybe worth mentioning as a possibility, but of course we would like VDAF execution to be DP from the point of view of the Collector as well. The straw man might be useful, so I'll leave it.",
              "createdAt": "2023-07-18T18:58:59Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 118,
              "body": "I'm proposing to split the current {{dp mechanisms}} section: I'm thinking the `DpMechanism` interface would fit into `{{mechanism}}` and we'd fit the low-level algorithms for sampling things in {{primitives}}. Does that sound good?",
              "createdAt": "2023-07-18T19:00:17Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 158,
              "body": "I think so, but we could probably reuse the PRGs defined in the VDAF draft.\r\n\r\nThe purpose is to have a reference implementation of these algorithms so that we increase the likelihood of others developing secure implementations. (My understanding is that it's easy to mess up here in a way that invalidates DP.) If the algorithm spells out expanding a seed into a sample from the given distribution, then we can produce test vectors to help increase confidence.\r\n\r\nCould you file an issue for specifying algorithms {{CKS20}}? No reason to actually do the work between now and Monday, but it'll be good to have our work scoped out.\r\n\r\n@tholop may be able to help out here.",
              "createdAt": "2023-07-18T19:03:13Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 166,
              "body": "In your opinion, do any of these algorithms need to be specified? The primary motivation for standardizing Laplace/Gaussian is that there are lots of ways to get the implementation wrong.\r\n\r\nI'm familiar with RAPPOR and I'm not sure any algorithm there needs to be standardized.",
              "createdAt": "2023-07-18T19:06:28Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 173,
              "body": "That's right :) It would also specify the interface for Client-DP mechanisms.",
              "createdAt": "2023-07-18T19:07:00Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 174,
              "body": "Good catch, I forgot to finish this bit. I just deleted the second sentence and the paragraph below.",
              "createdAt": "2023-07-18T19:08:34Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biaB8",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:18:53Z",
          "updatedAt": "2023-07-18T19:18:53Z",
          "comments": [
            {
              "originalPosition": 166,
              "body": "I think it's worth spelling out discrete Gaussian and Laplace. Both are pretty popular options in Aggregator-DP setting.\r\n\r\nFor RAPPOR, I think having one as an example for Client-DP setting would be useful in the draft.",
              "createdAt": "2023-07-18T19:18:53Z",
              "updatedAt": "2023-07-18T19:18:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bijiS",
          "commit": {
            "abbreviatedOid": "6342768"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM. I will try to tweak #4 to follow the guidance after this PR. Also filed #10 .",
          "createdAt": "2023-07-18T19:33:24Z",
          "updatedAt": "2023-07-18T20:33:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5bikQ8",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:35:48Z",
          "updatedAt": "2023-07-18T19:35:48Z",
          "comments": [
            {
              "originalPosition": 166,
              "body": "OK, SGTM!",
              "createdAt": "2023-07-18T19:35:48Z",
              "updatedAt": "2023-07-18T19:35:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOJ7sZWc5V8PUJ",
      "title": "Rework intro and change \"DP policy\" section into \"DAP integration\"",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/11",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It isn't possible to cleanly separate DP mechanisms into \"Client-DP\" mechanisms and \"Server-DP\" mechanisms. There are mechanisms for which both parties add noise, and the noise added by one party would not be sufficient for DP on its own.",
      "createdAt": "2023-07-19T23:06:14Z",
      "updatedAt": "2023-07-20T22:17:50Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "997e81493ffa9ab020fd4e79025ca6d80f0b8b51",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/rethink-dp-mechanism",
      "headRefOid": "02c5371fc3105a2afc11c5975f247679c87bf63b",
      "closedAt": "2023-07-20T22:17:50Z",
      "mergedAt": "2023-07-20T22:17:49Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "c0d7bdb3fad79d39a7dc9f5027b5357725377842"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bshn8",
          "commit": {
            "abbreviatedOid": "bee3e6c"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "Mostly look good, I have a comment about policy",
          "createdAt": "2023-07-20T04:15:27Z",
          "updatedAt": "2023-07-20T04:31:15Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nFor some DP mechanisms, noise is added only by the Clients or only by the\r\n```",
              "createdAt": "2023-07-20T04:15:27Z",
              "updatedAt": "2023-07-20T04:31:15Z"
            },
            {
              "originalPosition": 41,
              "body": "I think there is still a concept of policy missing, a policy is implemented by DpMechanism but it may have concerns that\u2019s not covered by DpMechanism, for eg. A policy of DP amplification depends on batch size, if it\u2019s larger than min batch size, no noise needs to be added. I think this decision is the role of a policy type, which should be _used_ by DAP aggregators",
              "createdAt": "2023-07-20T04:30:14Z",
              "updatedAt": "2023-07-20T04:31:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxftZ",
          "commit": {
            "abbreviatedOid": "bee3e6c"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:53:02Z",
          "updatedAt": "2023-07-20T16:53:02Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "This falls into the bucket of changes for DAP. I suggested to Junye that we avoid mentioning protocl changes for now and just carve out a section in the draft for them. I do plan to mention this optmization in the PPM meeting however.\r\n",
              "createdAt": "2023-07-20T16:53:02Z",
              "updatedAt": "2023-07-20T16:53:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxgBH",
          "commit": {
            "abbreviatedOid": "bee3e6c"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:53:53Z",
          "updatedAt": "2023-07-20T16:53:54Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Also, as discussed internally, we're going to merge this then rename \"primitive\" to \"mechanism\" and \"mechanism\" to \"policy\". Please plan on doing a full pass of the draft when you wake up and either file a PR to fix it up or drop comments somewhere :)",
              "createdAt": "2023-07-20T16:53:54Z",
              "updatedAt": "2023-07-20T16:53:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5byEwx",
          "commit": {
            "abbreviatedOid": "cde1e5d"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I think it looks good, assuming we apply the new naming: mechanisms for all the randomized algorithm sampler (Laplace, Gaussian), and policies for VDAFs.",
          "createdAt": "2023-07-20T18:29:47Z",
          "updatedAt": "2023-07-20T18:29:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzMs-",
          "commit": {
            "abbreviatedOid": "bee3e6c"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T21:59:21Z",
          "updatedAt": "2023-07-20T21:59:21Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Done.",
              "createdAt": "2023-07-20T21:59:21Z",
              "updatedAt": "2023-07-20T21:59:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzNJy",
          "commit": {
            "abbreviatedOid": "13e01b9"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good, just some comments about typo.",
          "createdAt": "2023-07-20T22:01:34Z",
          "updatedAt": "2023-07-20T22:05:36Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "mechanisms -> policies? If we are talking about noise by multiple parties here.",
              "createdAt": "2023-07-20T22:01:34Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\n1. {{mechanisms}} specifies various mechanisms required for building DP\r\n```",
              "createdAt": "2023-07-20T22:02:26Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n1. {{policies}} defines \"DP policies\", which are composed with VDAFs in order\r\n```",
              "createdAt": "2023-07-20T22:03:12Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 72,
              "body": "```suggestion\r\n1. The mechanisms described in {{mechanisms}} are intended for use beyond\r\n```",
              "createdAt": "2023-07-20T22:04:04Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\n# DP Mechanisms {#mechanisms}\r\n```",
              "createdAt": "2023-07-20T22:04:42Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 130,
              "body": "`\r\n```suggestion\r\n> TODO: Specify integration of a `DpPolicy` into DAP.\r\n```",
              "createdAt": "2023-07-20T22:05:13Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzRsM",
          "commit": {
            "abbreviatedOid": "bdec722"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:13:27Z",
          "updatedAt": "2023-07-20T22:14:14Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Good catch. I also added a definition of \"DP policy\" above.",
              "createdAt": "2023-07-20T22:13:27Z",
              "updatedAt": "2023-07-20T22:14:14Z"
            }
          ]
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOJ7sZWc5WDPMx",
      "title": "Add Pierre Tholoniat as contributor",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/14",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "He helped shaped much of this work so far.",
      "createdAt": "2023-07-20T22:36:18Z",
      "updatedAt": "2023-08-03T03:05:37Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "c0d7bdb3fad79d39a7dc9f5027b5357725377842",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/ack-pierre",
      "headRefOid": "e7ac8bb41b67ff982b9caa05c31728192f77b85d",
      "closedAt": "2023-08-03T03:05:37Z",
      "mergedAt": "2023-08-03T03:05:37Z",
      "mergedBy": "junyechen1996",
      "mergeCommit": {
        "oid": "e91f3e16a210a8c3b2a42a01da0ef7fda17f81f9"
      },
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "cc/ @tholop\r\n\r\n",
          "createdAt": "2023-07-20T22:36:25Z",
          "updatedAt": "2023-07-20T22:36:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5b4Efp",
          "commit": {
            "abbreviatedOid": "e7ac8bb"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-21T15:59:07Z",
          "updatedAt": "2023-07-21T15:59:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOJ7sZWc5annEw",
      "title": "Reorganize a bit and describe our trust models",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/16",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #15 by doing nothing. (COA security assumes the Collector doesn't share the aggregate result with the honest Aggregator.)",
      "createdAt": "2023-09-18T22:50:41Z",
      "updatedAt": "2023-09-18T23:27:31Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "6bfffda2f2961a058ae5270f6bd570610d216480",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/threat-model",
      "headRefOid": "dae729bc9d4d65df67c990ba95837333029e5da3",
      "closedAt": "2023-09-18T23:27:31Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 17,
      "id": "PR_kwDOJ7sZWc5anwBg",
      "title": "Describe DP goals and threat model",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/17",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Whoops, re-do of #16. I merged an intermediate commit, which seems to have confused GitHub.\r\n",
      "createdAt": "2023-09-18T23:28:20Z",
      "updatedAt": "2023-09-23T01:05:53Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "6bfffda2f2961a058ae5270f6bd570610d216480",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/threat-model",
      "headRefOid": "03220d61cf1d470138715eee04070d5818a5a16a",
      "closedAt": "2023-09-23T01:05:52Z",
      "mergedAt": "2023-09-23T01:05:52Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "8183bfa36913b04022251b6851af83553ed88013"
      },
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Squashed.",
          "createdAt": "2023-09-23T01:04:53Z",
          "updatedAt": "2023-09-23T01:04:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5hSOfB",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-18T23:59:33Z",
          "updatedAt": "2023-09-19T00:02:21Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "veracity is not really relevant; usefulness might be\r\n\r\n```suggestion\r\nof noise; but adding too much noise can reduce the usefulness of the aggregate\r\n```",
              "createdAt": "2023-09-18T23:59:34Z",
              "updatedAt": "2023-09-19T00:02:21Z"
            },
            {
              "originalPosition": 34,
              "body": "scare quotes?",
              "createdAt": "2023-09-18T23:59:47Z",
              "updatedAt": "2023-09-19T00:02:21Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nminimal loss in utility; but if the trust model includes the possibility that many Clients are corrupted by the attacker,\r\n```",
              "createdAt": "2023-09-19T00:00:20Z",
              "updatedAt": "2023-09-19T00:02:21Z"
            },
            {
              "originalPosition": 69,
              "body": "Did you know that you can do this now:\r\n\r\n```suggestion\r\nLet `exp(\u03b5)` denote raising the numeric constant `e` to the power of\r\n```\r\n\r\nOf course, whether you want to or not is something you will need to decide.",
              "createdAt": "2023-09-19T00:01:21Z",
              "updatedAt": "2023-09-19T00:02:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSQpW",
          "commit": {
            "abbreviatedOid": "97b8d29"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:07:04Z",
          "updatedAt": "2023-09-19T00:07:05Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "What would the RFC editor make of this? It's massively preferable obviously, but I don't know if this would eventually get shot down.",
              "createdAt": "2023-09-19T00:07:05Z",
              "updatedAt": "2023-09-19T00:07:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSQsX",
          "commit": {
            "abbreviatedOid": "81c2b8f"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:07:25Z",
          "updatedAt": "2023-09-19T00:07:25Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "What do you mean by square quotes?",
              "createdAt": "2023-09-19T00:07:25Z",
              "updatedAt": "2023-09-19T00:07:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSREl",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:09:19Z",
          "updatedAt": "2023-09-19T00:09:20Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Well, they recently changed the tooling because the tooling was too strict.  This would be fine.",
              "createdAt": "2023-09-19T00:09:20Z",
              "updatedAt": "2023-09-19T00:09:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSRHu",
          "commit": {
            "abbreviatedOid": "81c2b8f"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:09:37Z",
          "updatedAt": "2023-09-19T00:09:38Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "Simpler alternative suggested by Kunal. This doesn't account for the attack in #15, which is that one Aggregator \"maliciously\" doesn't add noise, causing its co-Aggregator to learn the non-noised aggregate result. I don't really know what to make of this \"attack\". I'd be fine ignoring it if folks think that splitting hairs here is distracting.\r\n\r\n```suggestion\r\n### OA: One-Aggregator\r\n\r\nAssume that at least one Aggregator is honest. The other Aggregator(s), the Collector, and most Clients are controlled by the attacker.\r\n```",
              "createdAt": "2023-09-19T00:09:37Z",
              "updatedAt": "2023-09-19T00:09:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSR5n",
          "commit": {
            "abbreviatedOid": "169bdf8"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:12:09Z",
          "updatedAt": "2023-09-19T00:12:09Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "Simpler alternative suggested by Kunal. This doesn't account for the attack in #15, which is that one Aggregator \"maliciously\" doesn't add noise, causing its co-Aggregator to learn the non-noised aggregate result. I don't really know what to make of this \"attack\". I'd be fine ignoring it if folks think that splitting hairs here is distracting.\r\n\r\n```suggestion\r\n### OA: One-Aggregator\r\n\r\nAssume that at least one Aggregator is honest. The other Aggregator(s), the Collector, and most Clients are controlled by the attacker.\r\n```",
              "createdAt": "2023-09-19T00:12:09Z",
              "updatedAt": "2023-09-19T00:12:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSVNy",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:20:02Z",
          "updatedAt": "2023-09-19T00:20:02Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "It looks like it only renders in \"art mode\": \r\n![image](https://github.com/wangshan/draft-wang-ppm-differential-privacy/assets/3453007/070f9a8e-7fa9-46dc-a505-1cbbed32f6f2)\r\n",
              "createdAt": "2023-09-19T00:20:02Z",
              "updatedAt": "2023-09-19T00:20:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSYWY",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:42:05Z",
          "updatedAt": "2023-09-19T00:42:05Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "srsly?  That's an xml2rfc bug if ever I saw one.  `&#120656;`= &#120656; works fine in browsers, so something is double-quoting the ampersand.",
              "createdAt": "2023-09-19T00:42:05Z",
              "updatedAt": "2023-09-19T00:42:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSZQm",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:48:31Z",
          "updatedAt": "2023-09-19T00:48:32Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "FWIW, my local testing doesn't produce that bug.  I had no trouble getting an epsilon to show, either by pasting the character directly in the document source or by using an entity reference.",
              "createdAt": "2023-09-19T00:48:31Z",
              "updatedAt": "2023-09-19T00:48:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUbRw",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T08:48:50Z",
          "updatedAt": "2023-09-19T08:48:50Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "https://en.wikipedia.org/wiki/Scare_quotes\r\n\r\nThere seems to be no reason for quotes here.\r\nAnd there is an \"on\" missing: `The best choice of policy depends *on* one's trust model`",
              "createdAt": "2023-09-19T08:48:50Z",
              "updatedAt": "2023-09-19T09:05:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUjzo",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:03:47Z",
          "updatedAt": "2023-09-19T09:03:48Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "nit: \"at the cost of some utility\" because \"higher\" is weird here since the utility is getting lower.",
              "createdAt": "2023-09-19T09:03:47Z",
              "updatedAt": "2023-09-19T09:03:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUkbV",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:05:11Z",
          "updatedAt": "2023-09-19T09:05:11Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "nit: Just say \"trustmodels\" the distinction doesn't matter here",
              "createdAt": "2023-09-19T09:05:11Z",
              "updatedAt": "2023-09-19T09:05:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUniG",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:12:04Z",
          "updatedAt": "2023-09-19T09:12:04Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "R and S are mixed up. Above it says S is the algorithm and R the aggregate, now this changes.",
              "createdAt": "2023-09-19T09:12:04Z",
              "updatedAt": "2023-09-19T09:17:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUtFZ",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:24:16Z",
          "updatedAt": "2023-09-19T09:24:16Z",
          "comments": [
            {
              "originalPosition": 152,
              "body": "nit: It's better to drop the parentheses the explanation is totally justified here. And maybe pick something other than `S` because that was already used above. If it's not used further it could just be omitted.",
              "createdAt": "2023-09-19T09:24:16Z",
              "updatedAt": "2023-09-19T09:24:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUxCu",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:33:05Z",
          "updatedAt": "2023-09-19T09:33:05Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "I think `One-Aggregator` is strictly more powerful and aligns better with the fact that there is no requirement in DAP to keep aggregates secret.\r\n\r\nI agree with the statements in issue #15 that assuming one aggregator doesn't add noise and the other one removes their own noise is actually two malicious aggregators and violates assumptions.",
              "createdAt": "2023-09-19T09:33:05Z",
              "updatedAt": "2023-09-19T09:33:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hT6m5",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T07:37:44Z",
          "updatedAt": "2023-09-19T12:12:53Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "nit: wrap at 80 columns.",
              "createdAt": "2023-09-19T07:37:44Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            },
            {
              "originalPosition": 152,
              "body": "```suggestion\r\n`S` that itself is pure-DP (or, approximate-DP) as defined above. (`S` takes\r\n```",
              "createdAt": "2023-09-19T07:52:34Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            },
            {
              "originalPosition": 158,
              "body": "```suggestion\r\nbe trusted to execute the protocol correctly (i.e., which parties were not\r\n```",
              "createdAt": "2023-09-19T07:53:34Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            },
            {
              "originalPosition": 191,
              "body": "```suggestion\r\nadded by the Client may not be sufficient to protect the measurement. However\r\n```",
              "createdAt": "2023-09-19T07:56:28Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nnon-negligible bound in order to achieve reasonable utility. See {{dp-explainer}}\r\n```",
              "createdAt": "2023-09-19T12:11:01Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haTdX",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:19:46Z",
          "updatedAt": "2023-09-19T22:19:47Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I'm using quotes to emphasize a term I'm defining. If this were latex, I'd use `\\emph{}`. Markdown italics can't be used in RFCs as far as I know.",
              "createdAt": "2023-09-19T22:19:47Z",
              "updatedAt": "2023-09-19T22:19:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haTlq",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:20:26Z",
          "updatedAt": "2023-09-19T22:20:26Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Ack, I'll do some research at some point. Possibly I have an old version.",
              "createdAt": "2023-09-19T22:20:26Z",
              "updatedAt": "2023-09-19T22:20:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haUzr",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:21:42Z",
          "updatedAt": "2023-09-19T22:21:43Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Good catch, I meant \"decreased\" \ud83d\ude2c ",
              "createdAt": "2023-09-19T22:21:42Z",
              "updatedAt": "2023-09-19T22:21:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haVFd",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:23:04Z",
          "updatedAt": "2023-09-19T22:23:04Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "Good catch. Previously I was using `R` for the algorithm and missed this one.",
              "createdAt": "2023-09-19T22:23:04Z",
              "updatedAt": "2023-09-19T22:23:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haZuv",
          "commit": {
            "abbreviatedOid": "169bdf8"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:47:43Z",
          "updatedAt": "2023-09-19T22:47:43Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "Done. I left addressing issue #15 as a TODO: It's worth mentioning in Security Considerations at least.",
              "createdAt": "2023-09-19T22:47:43Z",
              "updatedAt": "2023-09-19T22:47:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5habXc",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:57:22Z",
          "updatedAt": "2023-09-19T22:57:22Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Correct me if I'm wrong: I believe the goal of this section is to provide an overview of DP, including definitions (done in this PR), trust models (done in this PR), utility (to be filled) etc. Should the title of this section be changed to something like \"Overview\" as well? And things like utility can be added as a subsection in the overview.",
              "createdAt": "2023-09-19T22:57:22Z",
              "updatedAt": "2023-09-19T22:57:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hhkci",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T17:38:44Z",
          "updatedAt": "2023-09-20T17:38:44Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "I moved things around a bit. I guess we should have reviewed this first ... I took the liberty to just push to main. The old \"DP overview\" section is now in the Appendix.",
              "createdAt": "2023-09-20T17:38:44Z",
              "updatedAt": "2023-09-20T17:38:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hiOsQ",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T19:34:01Z",
          "updatedAt": "2023-09-20T19:56:57Z",
          "comments": [
            {
              "originalPosition": 155,
              "body": "This corresponds to the SIM-CDP definition (Def 4 from {{MPRV09}}). Other definitions exist, such as IND-CDP or SIM+-CDP, so it can be worth stating the exact definition being used once we have the formal CDP proof.",
              "createdAt": "2023-09-20T19:34:01Z",
              "updatedAt": "2023-09-20T19:56:57Z"
            },
            {
              "originalPosition": 173,
              "body": "Should it be \"all Clients\" instead of \"most Clients\", since we only trust one Aggregator and nobody else?",
              "createdAt": "2023-09-20T19:38:31Z",
              "updatedAt": "2023-09-20T19:56:57Z"
            },
            {
              "originalPosition": 90,
              "body": "Yes, {{DMNS06}} is defining Substitution + Pure DP in Def 1 (the \"databases\" have the same length). But with this definition, the *symmetric difference* between the multisets actually contains 2 elements, not one element.\r\n\r\nAnother reference that I often see to explain the difference between Substitution-DP and Addition-DP is this SIGMOD '11 paper: https://www.cse.psu.edu/~duk17/papers/nflprivacy.pdf. I think that they introduced the Bounded/Unbounded DP terminology, which is used by some papers.",
              "createdAt": "2023-09-20T19:56:04Z",
              "updatedAt": "2023-09-20T19:56:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjGgK",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T22:25:27Z",
          "updatedAt": "2023-09-20T22:25:28Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "perhaps enough to just say Aggregator, without (s), as other parts of the PR does",
              "createdAt": "2023-09-20T22:25:27Z",
              "updatedAt": "2023-09-20T22:25:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjKlK",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T22:47:27Z",
          "updatedAt": "2023-09-20T22:47:27Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "question: @cjpatton am I right the two trust model are type 1 and 2 from the googledoc. we don't consider the case where one aggregator and collector are honest? do we want to include this happy case?",
              "createdAt": "2023-09-20T22:47:27Z",
              "updatedAt": "2023-09-20T22:50:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjLSp",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T22:51:23Z",
          "updatedAt": "2023-09-20T22:51:23Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "I think we can bring back some section from old overview once we merge this. For e.g. local-DP should be explained before it's mentioned in Hedging",
              "createdAt": "2023-09-20T22:51:23Z",
              "updatedAt": "2023-09-20T22:51:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjL39",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T22:54:46Z",
          "updatedAt": "2023-09-20T22:59:03Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Great catch! Added reference to the Appendix (and cleaned up the subsection).",
              "createdAt": "2023-09-20T22:54:46Z",
              "updatedAt": "2023-09-20T22:59:03Z"
            },
            {
              "originalPosition": 155,
              "body": "Added this reference.",
              "createdAt": "2023-09-20T22:57:27Z",
              "updatedAt": "2023-09-20T22:59:03Z"
            },
            {
              "originalPosition": 171,
              "body": "yes, good catch!",
              "createdAt": "2023-09-20T22:57:55Z",
              "updatedAt": "2023-09-20T22:59:03Z"
            },
            {
              "originalPosition": 173,
              "body": "@wangshan pointed out that we're considering at least one honest Client, since otherwise privacy is completely meaningless :D ",
              "createdAt": "2023-09-20T22:58:36Z",
              "updatedAt": "2023-09-20T22:59:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjNFK",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:02:02Z",
          "updatedAt": "2023-09-20T23:02:03Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "See https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/17#discussion_r1329407535. It seems like people mostly agree that the attack #15 is basically the same as two Aggregators colluding. I'm not totally convinced myself (I wonder what happens when we try to formalize our security definition and try to prove it), but I think this is fine for now.\r\n\r\nIn any case, it's useful to settle on as few possible trust models as possible.",
              "createdAt": "2023-09-20T23:02:02Z",
              "updatedAt": "2023-09-20T23:02:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjNsd",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:05:43Z",
          "updatedAt": "2023-09-20T23:05:43Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "To me this section indicates one must define the trust model of their deployment then choose DP policy. But in reality the trust model may not hold true all the time. It may not be possible for user to choose a trust model and that model's best policy. For e.g. one may not know how many clients are honest. In reality, user probably will choose a DP policy then analyse/explain their DP guarantee under different trust model. Maybe we can word this to something like the choice of DP policy will be affected by the trust model, etc. @cjpatton ",
              "createdAt": "2023-09-20T23:05:43Z",
              "updatedAt": "2023-09-20T23:05:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjNu5",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:05:55Z",
          "updatedAt": "2023-09-20T23:05:55Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "That could work. I was thinking of adding a new section to Trust Models, something like this:\r\n\r\n```\r\n## NOP: No-honest-parties\r\n\r\nIf no parties are honest, then the best we can hope for is that the honest\r\nClients' measurements have \"local-DP\". This property is defined the same way as\r\npure- or approximate-DP, except that the bound that we aim to achieve is looser\r\nthan what we can get when at least one Aggregator is honest (OAMC or OA).\r\n```",
              "createdAt": "2023-09-20T23:05:55Z",
              "updatedAt": "2023-09-20T23:05:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjPfN",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:09:46Z",
          "updatedAt": "2023-09-20T23:09:46Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "sounds good to me, maybe worth mentioning there is still at least one honest client worthy protecting for.",
              "createdAt": "2023-09-20T23:09:46Z",
              "updatedAt": "2023-09-20T23:09:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjV7x",
          "commit": {
            "abbreviatedOid": "fd02abb"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:36:42Z",
          "updatedAt": "2023-09-20T23:36:58Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Great idea! I pruned some of the text here and implemented your suggestion in the itemized list below, PTAL.",
              "createdAt": "2023-09-20T23:36:43Z",
              "updatedAt": "2023-09-20T23:36:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjt7T",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T01:53:50Z",
          "updatedAt": "2023-09-21T01:53:50Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "I see, although I'd say that in that case privacy is trivially true rather than meaningless (\"for all neighboring databases in \\emptyset, ...\"). \r\n\r\nBut if we want to consider at least one honest Client, then we could make it explicit in the trust model, and say \"all but one Client\" instead of \"most Clients\". The separation between OneAggregator-MostClients and OneAggregator-OneClient seems cleaner than between OneAggregator-MostClients and OneAggregator-FewClients. ",
              "createdAt": "2023-09-21T01:53:50Z",
              "updatedAt": "2023-09-21T01:53:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hmCdQ",
          "commit": {
            "abbreviatedOid": "fd02abb"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks good to me. ",
          "createdAt": "2023-09-21T09:26:13Z",
          "updatedAt": "2023-09-21T09:26:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5hqkyU",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T19:21:39Z",
          "updatedAt": "2023-09-21T19:21:39Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Done.",
              "createdAt": "2023-09-21T19:21:39Z",
              "updatedAt": "2023-09-21T19:21:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hqlk5",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T19:23:49Z",
          "updatedAt": "2023-09-21T19:23:49Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "Well, ideally what we want is that that DP bound we can prove depends on the number of honest Clients: if all clients are honest then we get a great bound; if most are malicious, then we still the remaining Clients still get some degree of protection.",
              "createdAt": "2023-09-21T19:23:49Z",
              "updatedAt": "2023-09-21T19:23:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hrQ--",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T21:25:30Z",
          "updatedAt": "2023-09-21T21:25:30Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "That makes sense, if we have a bound that degrades gracefully when the number of honest Clients decreases, then OneAggregator-OneClient is simply a special case of this more general bound. But can't we capture this graceful degradation directly in the OA-MC trust model?\r\n\r\nTwo things still bug me a little with the current definition of OA, which is really OneAggregator-FewClients.\r\n- For a simple policy like Aggregator-side noise, the bound does not even depend on the number of honest Clients. So aggregator-side noise is secure under OneAggregator-OneClient. It seems wasteful to request stronger (and possibly more vague) trust assumptions in the form of OneAggregator-FewClients, when we really only need OneAggregator-OneClient.\r\n- Currently, the separation between OA and OA-MC seems a bit blurry: when do we go from \"most Clients are honest\" (OA-MC) to \"most Clients are malicious\" (OA)? Do we have protocols that drastically change when we go from 51% honest to 49% honest? I'd expect this kind of separation (maybe with a 2/3 threshold instead of 1/2) when we do MPC, but I don't think we're considering these protocols for now.\r\n\r\n",
              "createdAt": "2023-09-21T21:25:30Z",
              "updatedAt": "2023-09-21T21:25:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hrSta",
          "commit": {
            "abbreviatedOid": "d00a636"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T21:32:14Z",
          "updatedAt": "2023-09-21T21:35:57Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Does OAMC really correspond to the DAP trust model? I think that OA corresponds better, and I think that @simon-friedberger made the same point here: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/17#discussion_r1329844060. \r\n\r\nIf I understand correctly, DAP only says \"Individual users can reveal their own measurement and compromise their own privacy.\" and doesn't limit the number of Clients who do so.",
              "createdAt": "2023-09-21T21:32:14Z",
              "updatedAt": "2023-09-21T21:35:57Z"
            },
            {
              "originalPosition": 181,
              "body": "```suggestion\r\nAggregator and the Collector are controlled by the attacker. This corresponds to\r\n```",
              "createdAt": "2023-09-21T21:35:52Z",
              "updatedAt": "2023-09-21T21:35:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hr6pC",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T00:25:58Z",
          "updatedAt": "2023-09-22T00:25:58Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "\r\n>     * For a simple policy like Aggregator-side noise, the bound does not even depend on the number of honest Clients. So aggregator-side noise is secure under OneAggregator-OneClient. It seems wasteful to request stronger (and possibly more vague) trust assumptions in the form of OneAggregator-FewClients, when we really only need OneAggregator-OneClient.\r\n\r\n\r\nI agree that this distinction doesn't matter. However the distinction between OA-OC and OA-MC is important because, if you're targeting OA-MC, but it turns out that you're in OA-OC, then you may not have any privacy at all, say, if you're doing Client-only noise. On the other hand, if you're targeting OA-OC and use Aggregator-only noise, then you may end up with more utility loss than had you targeted OA-MC.\r\n\r\nI've changed \"OA\" to \"OAOC\" as you suggest.\r\n\r\n>     * Currently, the separation between OA and OA-MC seems a bit blurry: when do we go from \"most Clients are honest\" (OA-MC) to \"most Clients are malicious\" (OA)? Do we have protocols that drastically change when we go from 51% honest to 49% honest? I'd expect this kind of separation (maybe with a 2/3 threshold instead of 1/2) when we do MPC, but I don't think we're considering these protocols for now.\r\n\r\nWe are considering protocols like DPrio, where the privacy degrades as the number of corrupt clients increases. We're also considering pure Client-noise, which should similarly degrade gracefully. I don't expect we'll have schemes where the DP bound suddenly plummets once one more Client starts cheating!\r\n\r\n",
              "createdAt": "2023-09-22T00:25:58Z",
              "updatedAt": "2023-09-22T00:25:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hr7AP",
          "commit": {
            "abbreviatedOid": "d00a636"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T00:28:33Z",
          "updatedAt": "2023-09-22T00:28:33Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "The base protocol is meant to provide private aggregation (the attacker learns nothing but the aggregate result) up to Sybil attacks. That means the protocol only achieves its goals when the attacker does not control any of the inputs to aggregation.\r\n\r\nI think you're right that it's different, mainly due to the word \"most\". I've clarified.",
              "createdAt": "2023-09-22T00:28:33Z",
              "updatedAt": "2023-09-22T00:28:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hr7vZ",
          "commit": {
            "abbreviatedOid": "a0be012"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-22T00:32:31Z",
          "updatedAt": "2023-09-22T00:40:03Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "```suggestion\r\nbe trusted to execute the protocol correctly (i.e., which parties are not\r\n```\r\n\r\n?",
              "createdAt": "2023-09-22T00:35:32Z",
              "updatedAt": "2023-09-22T00:40:03Z"
            },
            {
              "originalPosition": 108,
              "body": "The rest of the document seems to call the randomized algorithm as `R`, and aggregate result as `S`.",
              "createdAt": "2023-09-22T00:38:08Z",
              "updatedAt": "2023-09-22T00:40:03Z"
            },
            {
              "originalPosition": 108,
              "body": "also one nit thing: I don't know if you intend to use a mixture of \"randomized algorithm\" and \"DP mechanism\", but they seem to mean the same to me.",
              "createdAt": "2023-09-22T00:39:51Z",
              "updatedAt": "2023-09-22T00:40:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hsBKc",
          "commit": {
            "abbreviatedOid": "f0e4d1b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T00:46:46Z",
          "updatedAt": "2023-09-22T00:47:24Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "* Arg... I meant to use `S` for the algorithm and `r` for the aggregate result. Fixed now (hopefully).\r\n* They're slightly different because the \"DP mechanism\" just generates noise; the \"randomized algorithm\" here aggregates then invokes a DP mechanism.",
              "createdAt": "2023-09-22T00:46:46Z",
              "updatedAt": "2023-09-22T00:47:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hwOwU",
          "commit": {
            "abbreviatedOid": "e9d2c9b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-22T14:03:44Z",
          "updatedAt": "2023-09-22T14:03:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5hyMMl",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T19:41:04Z",
          "updatedAt": "2023-09-22T19:41:04Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "Great, thanks @cjpatton!",
              "createdAt": "2023-09-22T19:41:04Z",
              "updatedAt": "2023-09-22T19:41:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hyMoA",
          "commit": {
            "abbreviatedOid": "e9d2c9b"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-22T19:42:23Z",
          "updatedAt": "2023-09-22T19:42:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 19,
      "id": "PR_kwDOJ7sZWc5bKis_",
      "title": "Create skeleton for noisy histograms use case",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/19",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-25T20:42:41Z",
      "updatedAt": "2023-10-10T18:30:15Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "5334a6462359b4f57463ee6b495245eb4b8dd978",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/noisy-histogram-1",
      "headRefOid": "81c4509459a19f56eceffd4c0c3afb97ecae5559",
      "closedAt": "2023-10-10T18:30:15Z",
      "mergedAt": "2023-10-10T18:30:15Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "1592b0352b60b1ca05723a3b5253029927ea8bb1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5h8HQg",
          "commit": {
            "abbreviatedOid": "8bf742c"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-26T00:10:28Z",
          "updatedAt": "2023-09-26T00:12:17Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n> TODO Describe a policy that is compatible with Prio3Histogram and that\r\n```",
              "createdAt": "2023-09-26T00:10:28Z",
              "updatedAt": "2023-09-26T00:12:17Z"
            },
            {
              "originalPosition": 16,
              "body": "I don't think readers will be convinced on optimal utility if we don't provide some numbers, but I'm fine with leaving the text as-is, and we will work on it later on.",
              "createdAt": "2023-09-26T00:11:49Z",
              "updatedAt": "2023-09-26T00:12:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5icInv",
          "commit": {
            "abbreviatedOid": "8bf742c"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T22:25:18Z",
          "updatedAt": "2023-09-29T22:25:18Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n### Prio3Histogram with Client-DP\r\n```",
              "createdAt": "2023-09-29T22:25:18Z",
              "updatedAt": "2023-09-29T22:25:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5icIpw",
          "commit": {
            "abbreviatedOid": "8bf742c"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T22:25:33Z",
          "updatedAt": "2023-09-29T22:25:33Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\n### Prio3Histogram with Aggregator-DP\r\n```",
              "createdAt": "2023-09-29T22:25:33Z",
              "updatedAt": "2023-09-29T22:25:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5icIr-",
          "commit": {
            "abbreviatedOid": "8bf742c"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "I think it's good enough to merge as a skeleton ",
          "createdAt": "2023-09-29T22:25:49Z",
          "updatedAt": "2023-09-29T22:25:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5jdCpP",
          "commit": {
            "abbreviatedOid": "580d537"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-10T18:27:29Z",
          "updatedAt": "2023-10-10T18:27:29Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Good call, I've added an author note with this suggestion. (Author note: `[JC: ...]`)",
              "createdAt": "2023-10-10T18:27:29Z",
              "updatedAt": "2023-10-10T18:27:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOJ7sZWc5bt1Mb",
      "title": "Fix author list so everyone shows in editor mode",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/20",
      "state": "MERGED",
      "author": "wangshan",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-02T21:15:29Z",
      "updatedAt": "2023-10-03T17:02:56Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "8183bfa36913b04022251b6851af83553ed88013",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "wangshan/fix-author-list",
      "headRefOid": "9935fa815da9c3d5c7356a57592a795463e97c60",
      "closedAt": "2023-10-03T17:02:55Z",
      "mergedAt": "2023-10-03T17:02:55Z",
      "mergedBy": "wangshan",
      "mergeCommit": {
        "oid": "5334a6462359b4f57463ee6b495245eb4b8dd978"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5imyF1",
          "commit": {
            "abbreviatedOid": "9935fa8"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-03T04:28:18Z",
          "updatedAt": "2023-10-03T04:28:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 21,
      "id": "PR_kwDOJ7sZWc5dAM_K",
      "title": "Set up reference implementation folder",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/21",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Set up reference implementation folder structure with the DP mechanisms, DP policies, and the submoduled VDAF reference implementation.",
      "createdAt": "2023-10-17T11:07:30Z",
      "updatedAt": "2023-10-19T17:58:34Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "1592b0352b60b1ca05723a3b5253029927ea8bb1",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/ref-impl",
      "headRefOid": "2887d25a89fedf2a0e29b03f634f4d9f6c422e53",
      "closedAt": "2023-10-18T17:45:01Z",
      "mergedAt": "2023-10-18T17:45:01Z",
      "mergedBy": "junyechen1996",
      "mergeCommit": {
        "oid": "3d401e96c7e8beb127102a6ff6cadf6cb08ef213"
      },
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Will try to set up more standard unit testing in python (e.g. unittest, pytest). The current setup highly mimics the setup in VDAF draft, which should be ok for now.",
          "createdAt": "2023-10-17T15:43:36Z",
          "updatedAt": "2023-10-17T15:43:36Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think there is anything major. So I will squash and merge to make other PRs easier to review.",
          "createdAt": "2023-10-18T17:42:49Z",
          "updatedAt": "2023-10-18T17:42:49Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5kTFjD",
          "commit": {
            "abbreviatedOid": "1a8d839"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T15:45:31Z",
          "updatedAt": "2023-10-17T15:45:40Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "For this particular reason, this API's name may need to be changed to accommodate this problem. It's not strictly limited to debiasing for Client-DP. We basically need a way to \"postprocess\" the aggregate result from VDAF, knowing the DP noise we added.",
              "createdAt": "2023-10-17T15:45:31Z",
              "updatedAt": "2023-10-17T15:45:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kXCJw",
          "commit": {
            "abbreviatedOid": "1a8d839"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good. I've left a number of comments, but all of them should be straightforward for you to address. I'm approving now to unblock you in case you want to merge now and defer some of the work to later. (Use your best judgement, I trust you.)",
          "createdAt": "2023-10-18T01:49:02Z",
          "updatedAt": "2023-10-18T02:25:38Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\nBinary randomized response mechanism based from Appendix C.1 in\r\n```",
              "createdAt": "2023-10-18T01:49:03Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 4,
              "body": "Ok, it's a bit of a lie that we would add noise to the aggregate result. We could be more specific about the VDAF syntax, but when talking about DP mechanisms, I think it'll be useful to be somewaht agnostic about the protocol with we're making DP.\r\n\r\n```suggestion\r\nA DP mechanism is responsible for sampling noise and adding it to either a measurement or the aggregate result itself.\r\n```",
              "createdAt": "2023-10-18T01:51:32Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n    # The data type applicable to this `DpMechanism`. The type is the same for the noised data s for the un-noised data.\r\n```",
              "createdAt": "2023-10-18T01:54:04Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 11,
              "body": "Worth adding a comment here describing DebiasedDataType. Also worth noting that, for some DP mechanisms, `DebiasedDataType == DataType`.",
              "createdAt": "2023-10-18T01:54:59Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 19,
              "body": "Define the terms `num_reps` and `dimension`.",
              "createdAt": "2023-10-18T01:55:52Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 24,
              "body": "What do you think?\r\n\r\nHere and elsewhere.\r\n\r\n```suggestion\r\n               data: DataType,\r\n```",
              "createdAt": "2023-10-18T01:56:17Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 27,
              "body": "Ragged line. Is this intentional? If this line and the next are part of the same paragraph, then we should break the line at 80 characters.",
              "createdAt": "2023-10-18T01:57:05Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n               agg_result: DataType,\r\n```",
              "createdAt": "2023-10-18T01:57:50Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 24,
              "body": "Consider making this the default implementation of `debias()`, i.e., moving this implementation to the base class. (Since most of the time debiasing will be a no-op, right?)\r\n\r\nSimilar above.",
              "createdAt": "2023-10-18T01:58:34Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 14,
              "body": "`float` is fine for now, but this raises a question I think we should surface as a GH issue: should the spec use floats or fixed precision? Relatedly, what about representing constants like `EPSILON` or `DELTA` as ratoinals? This is what we ended up doing in liprio-rs, in anticipation of this question.",
              "createdAt": "2023-10-18T02:01:33Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 2,
              "body": "For consistency with the draft. (Or, if you like update the draft to use `eps` and `delta`. Go with whatever feels right!) Also, I like to use backticks around variables I refer to in comments. Just a suggestion, again totally up to you.\r\n\r\nHere and below.\r\n\r\n```suggestion\r\nA policy that uses only Aggregator-DP to achieve central (`EPSILON`, `DELTA`)-DP.\r\n```",
              "createdAt": "2023-10-18T02:02:33Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 16,
              "body": "This strikes me as a bit non-standard for structuring Python projects. I see the appeal of nested structure since it groups related things. This is why in the VDAF draft we gave related modules a related prefix, e.g., `vdaf` and `vdaf_prio3`. If you want nested structure, then I suggest reading up on how to do this properly. Back in the Python2 it was a simple matter of creating an `__init__.py` in each directory that defines the files in the module. (Not sure what we do in Python3.)\r\n\r\nAnother option would be to flatten the directory structure so that all modules you want ti import appear in the same directory. Then all you have to do is import.\r\n\r\n",
              "createdAt": "2023-10-18T02:09:48Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 18,
              "body": "This is the exception to the above comment: I don't think there's a better way to to include sources from a submodule.",
              "createdAt": "2023-10-18T02:10:10Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 21,
              "body": "Consider pointing to https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/10 here.\r\n\r\nSimilar comment on the other mechanisms below.",
              "createdAt": "2023-10-18T02:12:01Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 4,
              "body": "Actually this depends on the threat model right? E.g., for HistogramWithAggregatorDp we need only one Aggregator to be honest, but we lose some utility if both Aggregators are honest.",
              "createdAt": "2023-10-18T02:13:28Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 5,
              "body": "Worth calling out here that this is specific to VDAF.",
              "createdAt": "2023-10-18T02:15:11Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 29,
              "body": "Remind me why we distinguish between `meas_count` and `min_batch_size`? Also, please document these parameters in the function comment below.\r\n\r\nIf this is related to the \"compensation\" idea (https://docs.google.com/document/d/1a5EoDLswyI0IKv2xwyqF4kMJNqRdVKapskeqwPtuqa4/edit), then I think we agreed to hold off on that idea in the intial draft. cc/ @wangshan to confirm.\r\n\r\nSimilar question for debias_agg_result() below.",
              "createdAt": "2023-10-18T02:18:59Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 46,
              "body": "Consider making this the default implementation. (Same idea as a previous comment.)",
              "createdAt": "2023-10-18T02:21:27Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 66,
              "body": "Good catch, let's generalize in this PR? Just call it \"postprocess\" for now and consider listing \"debiasing the noise\" as one possible application.",
              "createdAt": "2023-10-18T02:22:26Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            },
            {
              "originalPosition": 5,
              "body": "Why talk about the min batch size and not the concrete batch size? (Clarify in the comment.)",
              "createdAt": "2023-10-18T02:22:50Z",
              "updatedAt": "2023-10-18T02:25:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kb1Jd",
          "commit": {
            "abbreviatedOid": "1a8d839"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T13:01:42Z",
          "updatedAt": "2023-10-18T13:31:35Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "@cjpatton I would avoid mentioning aggregate result, in aggregator-DP policy the noise is added to aggregate share not aggregate result. We either be agonistic and say \"adding noise to data\", or use the exact term used in VDAF.",
              "createdAt": "2023-10-18T13:01:42Z",
              "updatedAt": "2023-10-18T13:31:35Z"
            },
            {
              "originalPosition": 66,
              "body": "I think this still counts as debias. Postprocess is too vague a term, it's hard to explain what should and shouldn't go into postprocess. So here you basically need to convert a List[Field] to list[int] first, then add noise?",
              "createdAt": "2023-10-18T13:12:17Z",
              "updatedAt": "2023-10-18T13:31:35Z"
            },
            {
              "originalPosition": 29,
              "body": "It's mainly for compensation, same for `debias_agg_result`: it needs to know how many noise compensation has been added. \r\n\r\nI think we can move remove min_batch_size from the interface for now. With some explanation on the min batch size: 1). with client-DP the min batch size is calculated by client noise and desired aggregator-DP. 2). DpPolicy will not be invoked if the min_batch_size from DAP is not satisfied, and the batch will be dropped.",
              "createdAt": "2023-10-18T13:31:28Z",
              "updatedAt": "2023-10-18T13:31:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kcHz0",
          "commit": {
            "abbreviatedOid": "1a8d839"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T13:31:49Z",
          "updatedAt": "2023-10-18T13:31:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5kdnfa",
          "commit": {
            "abbreviatedOid": "8d8c34a"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T15:58:50Z",
          "updatedAt": "2023-10-18T17:31:25Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Removed \"based\" as well.",
              "createdAt": "2023-10-18T15:58:50Z",
              "updatedAt": "2023-10-18T17:31:25Z"
            },
            {
              "originalPosition": 14,
              "body": "I think we should try to use rationals as much as possible. Raised an issue here: https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/23",
              "createdAt": "2023-10-18T16:02:31Z",
              "updatedAt": "2023-10-18T17:31:26Z"
            },
            {
              "originalPosition": 24,
              "body": "Good call. Fixed.",
              "createdAt": "2023-10-18T16:06:01Z",
              "updatedAt": "2023-10-18T17:31:25Z"
            },
            {
              "originalPosition": 25,
              "body": "I think I will be consistent with using `data` in `DpMechanism`. I will use `agg_result` in `DpPolicy`.",
              "createdAt": "2023-10-18T16:09:08Z",
              "updatedAt": "2023-10-18T17:31:25Z"
            },
            {
              "originalPosition": 9,
              "body": "I think eventually we may bump into cases where unnoised data type is the same as noised data type :) but I will remove the assumption for now.",
              "createdAt": "2023-10-18T16:10:12Z",
              "updatedAt": "2023-10-18T17:31:25Z"
            },
            {
              "originalPosition": 16,
              "body": "Yes I agree. That's part of the problem of not using modules. Let me file a GitHub issue to use module-based source files (with `__init__.py`) and resolve it later. Filed #24 ",
              "createdAt": "2023-10-18T16:12:21Z",
              "updatedAt": "2023-10-18T17:31:26Z"
            },
            {
              "originalPosition": 4,
              "body": "Agree it should be VDAF agnostic. How about \"adding it to the data with the type applicable to the DP mechanism\"?",
              "createdAt": "2023-10-18T16:27:39Z",
              "updatedAt": "2023-10-18T17:31:25Z"
            },
            {
              "originalPosition": 11,
              "body": "Good point. Added.",
              "createdAt": "2023-10-18T16:36:50Z",
              "updatedAt": "2023-10-18T17:31:25Z"
            },
            {
              "originalPosition": 27,
              "body": "I was wrapping lines at 70 lines at time because we need to copy it into the draft. I can start wrapping at 80 lines in the reference implementation. ",
              "createdAt": "2023-10-18T16:38:19Z",
              "updatedAt": "2023-10-18T17:31:25Z"
            },
            {
              "originalPosition": 2,
              "body": "Sounds right. Let's use `EPSILON` and `DELTA` in docstring. We can even update it if we end up using Greek letters.",
              "createdAt": "2023-10-18T16:42:05Z",
              "updatedAt": "2023-10-18T17:31:26Z"
            },
            {
              "originalPosition": 4,
              "body": "Right. I added more comments here.",
              "createdAt": "2023-10-18T17:05:14Z",
              "updatedAt": "2023-10-18T17:31:26Z"
            },
            {
              "originalPosition": 5,
              "body": "I changed it to \"target `batch_size` number of honest Clients\".",
              "createdAt": "2023-10-18T17:05:14Z",
              "updatedAt": "2023-10-18T17:31:26Z"
            },
            {
              "originalPosition": 66,
              "body": "Ok. I will keep it as debiasing for now.",
              "createdAt": "2023-10-18T17:05:14Z",
              "updatedAt": "2023-10-18T17:31:25Z"
            },
            {
              "originalPosition": 29,
              "body": "Good point. Let's remove it for now. And added a note in the file header in `multi_hot_histogram_with_client_dp.py`.",
              "createdAt": "2023-10-18T17:06:55Z",
              "updatedAt": "2023-10-18T17:31:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5keh9J",
          "commit": {
            "abbreviatedOid": "1a8d839"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T17:34:45Z",
          "updatedAt": "2023-10-18T17:34:45Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Explained `dimension`, and removed `num_reps` (only applicable to Aggregator compensation I realized, so removed it for simplicity).",
              "createdAt": "2023-10-18T17:34:45Z",
              "updatedAt": "2023-10-18T17:34:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 22,
      "id": "PR_kwDOJ7sZWc5dANLO",
      "title": "Clean up text for Client-DP",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/22",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Specify randomized response sampler and specify how to instantiate Prio3MultiHotHistogram with the maximum number of 1s",
      "createdAt": "2023-10-17T11:08:03Z",
      "updatedAt": "2023-10-19T17:58:25Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "3d401e96c7e8beb127102a6ff6cadf6cb08ef213",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/histogram-client-dp",
      "headRefOid": "3b61a86e3f7470d20944df3d4b4f31bc6bbe565b",
      "closedAt": "2023-10-19T17:58:21Z",
      "mergedAt": "2023-10-19T17:58:21Z",
      "mergedBy": "junyechen1996",
      "mergeCommit": {
        "oid": "9f88426c7f1b958cc41f028fcad5a222b7eb9f7e"
      },
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Reviewer's note: stacked PR on #21 ",
          "createdAt": "2023-10-17T11:08:35Z",
          "updatedAt": "2023-10-17T11:08:35Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Squashed.",
          "createdAt": "2023-10-19T17:58:13Z",
          "updatedAt": "2023-10-19T17:58:13Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5kXMIi",
          "commit": {
            "abbreviatedOid": "cecae5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "My review focuses mainly on the structure of the text, I am not able to review the actual mechanism in detail. Please lean on @wangshan for review here.\r\n\r\nOverall I think this is in good shape. My main suggestion is to avoid using terminology that is not defined. For example the notions of \"central DP\" and \"local DP\" are used in this PR, but they haven't been defined. First, check if there is other terminology you can use instead; if not, please add it {{overview}}.",
          "createdAt": "2023-10-18T02:27:37Z",
          "updatedAt": "2023-10-18T02:47:24Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "Be specific (\"approximate-DP\" is more meaningful than \"DP guarantee\" because we defined it previously) and specify the trust model.\r\n```suggestion\r\ngood approximate-DP in the OAMC trust model. It is the same as the one specified in\r\n```",
              "createdAt": "2023-10-18T02:27:37Z",
              "updatedAt": "2023-10-18T02:47:24Z"
            },
            {
              "originalPosition": 77,
              "body": "We need a paragraph before this describing what type of data the mechanism is compatible with. Giving an illustrative example would help to.",
              "createdAt": "2023-10-18T02:29:04Z",
              "updatedAt": "2023-10-18T02:47:24Z"
            },
            {
              "originalPosition": 80,
              "body": "1. If you say the words \"DP guarantee\", then you probably aren't being clear enough. Do you mean that we get `EPSILON_0`-DP in the OC trust model?\r\n2. In the appendix we say that DAP is not compatible with deletion-DP. Indeed, the way we define neighboring databases in the section above rules this out.",
              "createdAt": "2023-10-18T02:33:10Z",
              "updatedAt": "2023-10-18T02:47:25Z"
            },
            {
              "originalPosition": 82,
              "body": "\"which ensures that it is impossible...\" What's the goal for this text?",
              "createdAt": "2023-10-18T02:33:59Z",
              "updatedAt": "2023-10-18T02:47:25Z"
            },
            {
              "originalPosition": 86,
              "body": "```suggestion\r\ndebiasing operations involve floating point arithmetic.\r\n```",
              "createdAt": "2023-10-18T02:34:15Z",
              "updatedAt": "2023-10-18T02:47:25Z"
            },
            {
              "originalPosition": 91,
              "body": "CLT is probably folklore enough (\"folklore\" == \"well-known enough to not require a citation\") but we should probably state it for the reader in the conventions section of this draft, at least informally. (Similar to how we handle `e`.)",
              "createdAt": "2023-10-18T02:35:50Z",
              "updatedAt": "2023-10-18T02:47:25Z"
            },
            {
              "originalPosition": 154,
              "body": "\"central DP guarantee\" is not meaningful unless we define it.",
              "createdAt": "2023-10-18T02:38:08Z",
              "updatedAt": "2023-10-18T02:47:25Z"
            },
            {
              "originalPosition": 323,
              "body": "```suggestion\r\nand another which uses only an Aggregator-DP mechanism and targets the more\r\n```",
              "createdAt": "2023-10-18T02:40:07Z",
              "updatedAt": "2023-10-18T02:47:25Z"
            },
            {
              "originalPosition": 324,
              "body": "```suggestion\r\nstringent OAOC trust model. We will then compare the utility of both policies\r\n```",
              "createdAt": "2023-10-18T02:40:25Z",
              "updatedAt": "2023-10-18T02:47:25Z"
            },
            {
              "originalPosition": 331,
              "body": "This TODO looks to be out-of-date.",
              "createdAt": "2023-10-18T02:41:11Z",
              "updatedAt": "2023-10-18T02:47:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kcRL6",
          "commit": {
            "abbreviatedOid": "cecae5b"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T13:45:38Z",
          "updatedAt": "2023-10-18T13:45:38Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "for 1. I think it's ok to see EPSILON_0-DP guarantee, since this is client level DP noise, it doesn't really to do with the DP guarantee for the whole aggregation, which then relates to the trust models.",
              "createdAt": "2023-10-18T13:45:38Z",
              "updatedAt": "2023-10-18T13:45:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kcZeP",
          "commit": {
            "abbreviatedOid": "cecae5b"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T13:56:51Z",
          "updatedAt": "2023-10-18T13:56:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5kfDPc",
          "commit": {
            "abbreviatedOid": "cecae5b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I believe the open discussions are mostly on the explanation for binary randomized response: specifically:\r\n\r\n- Describe randomized response's input: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/22/files#r1363033006\r\n- Clarification about `EPSILON_0`-DP in deletion-DP model, and connection with `(EPSILON, DELTA)`-DP in replacement-DP model, which is the only model in DAP.\r\n\r\nI reworked the text in both.",
          "createdAt": "2023-10-18T18:47:03Z",
          "updatedAt": "2023-10-18T19:19:19Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "It actually is `EPSILON_0`-DP, but I removed \"DP guarantee\", and say it is `EPSILON_0`-DP in the deletion-DP model.",
              "createdAt": "2023-10-18T18:47:03Z",
              "updatedAt": "2023-10-18T19:19:19Z"
            },
            {
              "originalPosition": 77,
              "body": "I added a paragraph, and reworked the explanation here. Please take a look again.",
              "createdAt": "2023-10-18T18:47:22Z",
              "updatedAt": "2023-10-18T19:19:19Z"
            },
            {
              "originalPosition": 80,
              "body": "So it's correct binary randomized response only provides `EPSILON_0`-DP in deletion-DP at Client level, but by aggregating a batch of one-hot vectors noised with binary randomized response at all coordinates, we get `(EPSILON, DELTA)`-DP in the replacement DP model. I reworked this paragraph a bit. Let me know if it makes sense more.",
              "createdAt": "2023-10-18T18:56:15Z",
              "updatedAt": "2023-10-18T19:19:19Z"
            },
            {
              "originalPosition": 82,
              "body": "Removed it.",
              "createdAt": "2023-10-18T18:56:20Z",
              "updatedAt": "2023-10-18T19:19:19Z"
            },
            {
              "originalPosition": 91,
              "body": "Sounds good. I added a text about CLT in Conventions.",
              "createdAt": "2023-10-18T18:56:35Z",
              "updatedAt": "2023-10-18T19:19:19Z"
            },
            {
              "originalPosition": 154,
              "body": "Removed this change.",
              "createdAt": "2023-10-18T18:57:13Z",
              "updatedAt": "2023-10-18T19:19:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kfxAQ",
          "commit": {
            "abbreviatedOid": "131939d"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "A few more text flow comments, should be easy enough to resolve.",
          "createdAt": "2023-10-18T20:06:31Z",
          "updatedAt": "2023-10-18T20:17:27Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "\"replacement-DP\" is defined below (in the appendix) but not above.  If you want to use the term, make sure it's defined before reader gets here. (I don't think it's strictly necessary, since we defined DP in terms of replacement already.)",
              "createdAt": "2023-10-18T20:06:31Z",
              "updatedAt": "2023-10-18T20:17:27Z"
            },
            {
              "originalPosition": 51,
              "body": "A single bit or a bit vector? I still think an illustrative example would be helpful. (What type of data might be noising? Perhaps describe the histogram use case?)",
              "createdAt": "2023-10-18T20:07:01Z",
              "updatedAt": "2023-10-18T20:17:27Z"
            },
            {
              "originalPosition": 49,
              "body": "(Follow up on https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/22#discussion_r1364371532) This looks fine except \"Client level\" is not defined. What about \"in the OC trust model\"?\r\n\r\nAlso, we should define deletion-DP informally here so that the reader doesn't need to look this up.\r\n\r\n```suggestion\r\nThe binary randomized response mechanism specified in Appendix C.1 of\r\n{{MJTB+22}} is `EPSILON_0`-DP at the OC trust model, in the deletion-DP model\r\n(Definition II.4 of {{EFMR+20}}).\r\n```",
              "createdAt": "2023-10-18T20:14:49Z",
              "updatedAt": "2023-10-18T20:17:27Z"
            },
            {
              "originalPosition": 46,
              "body": "This isn't suitable as an intro paragraph. I suggest moving it below the paragraph that mentions approximate DP and OAMC trust model.",
              "createdAt": "2023-10-18T20:16:30Z",
              "updatedAt": "2023-10-18T20:17:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kivQc",
          "commit": {
            "abbreviatedOid": "240394d"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I think the open threads are:\r\n\r\n- intro text for binary randomized response: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/22/files#r1364485590\r\n- clarification about input data type for binary randomized response: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/22#discussion_r1364988709\r\n- definition of replacement-DP and deletion-DP: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/22#discussion_r1365655577",
          "createdAt": "2023-10-19T06:28:45Z",
          "updatedAt": "2023-10-19T14:45:18Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Yes, good idea. It indeed works under OC trust model.",
              "createdAt": "2023-10-19T06:28:45Z",
              "updatedAt": "2023-10-19T14:44:30Z"
            },
            {
              "originalPosition": 51,
              "body": "The vanilla binary randomized response operates on a bit. I described it with an example with a bit, let me know if it makes things clearer.\r\n\r\nI did mention in the next paragraph: \"we generalize binary randomized response mechanism by applying it independently at all coordinates of a Client's bit vector\".",
              "createdAt": "2023-10-19T06:39:33Z",
              "updatedAt": "2023-10-19T14:44:30Z"
            },
            {
              "originalPosition": 46,
              "body": "I opened up this section with binary randomized response's parameters and inputs right now. I mention `EPSILON_0`-DP in OC trust model now, which I think we've already defined at this point?",
              "createdAt": "2023-10-19T14:34:38Z",
              "updatedAt": "2023-10-19T14:44:30Z"
            },
            {
              "originalPosition": 56,
              "body": "Good point. Move that part of the text to overview now, where we've been defining `EPSILON`-DP and `(EPSILON, DELTA)`-DP in terms of replacement-DP. I didn't go in depth on deletion-DP, which I only elaborated in the section for binary randomized response.",
              "createdAt": "2023-10-19T14:36:32Z",
              "updatedAt": "2023-10-19T14:44:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kn5U5",
          "commit": {
            "abbreviatedOid": "346de9d"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for your thoroughness! Looks good to me. I have one high level comment, but it's bigger this PR so I'll move it to an issue.",
          "createdAt": "2023-10-19T16:26:22Z",
          "updatedAt": "2023-10-19T16:35:41Z",
          "comments": [
            {
              "originalPosition": 152,
              "body": "```suggestion\r\nmeasurement `D` from the measurement from an average Client.\r\n```",
              "createdAt": "2023-10-19T16:26:22Z",
              "updatedAt": "2023-10-19T16:35:41Z"
            },
            {
              "originalPosition": 131,
              "body": "This section is well-scoped, and I don't want to change anything for now.\r\n\r\nIn the medium term, I think we should spend time thinking through how this notion of DP relates to the notion of DP we've already defined.\r\n\r\nLong term, I think our goal for PPM should be to have a single (or as few as possible) notions of DP. That way we have a standard methodology (or methodologies) for evaluating DP mechanisms and policies. The fact that there are so many DP notions in the literature that may or may not be comparable is a huge problem for standardization.\r\n\r\nRelatedly, I believe there is an important research question here: for a given application (DAP) systematize the DP notions in the literature that apply such that we can compare them to one another (at least qualitatively, but ideally quantitatively). Presumably there are trade-offs to be made, depending on which notion of DP you pick; what we want at the end of the day is the right DP notion that allows us to make sense of what to do for DAP.",
              "createdAt": "2023-10-19T16:32:56Z",
              "updatedAt": "2023-10-19T16:35:41Z"
            },
            {
              "originalPosition": 46,
              "body": "Looks much better, thanks!",
              "createdAt": "2023-10-19T16:33:26Z",
              "updatedAt": "2023-10-19T16:35:41Z"
            },
            {
              "originalPosition": 103,
              "body": "nit: A better intro sentence would be: \"This section described the binary randomized response mechanism.\"",
              "createdAt": "2023-10-19T16:33:57Z",
              "updatedAt": "2023-10-19T16:35:41Z"
            },
            {
              "originalPosition": 51,
              "body": "Yup, that clarifies it, thanks.",
              "createdAt": "2023-10-19T16:34:21Z",
              "updatedAt": "2023-10-19T16:35:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kogYa",
          "commit": {
            "abbreviatedOid": "3b61a86"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T17:54:15Z",
          "updatedAt": "2023-10-19T17:57:32Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "Agreed. Let's continue discussing in issue.",
              "createdAt": "2023-10-19T17:54:16Z",
              "updatedAt": "2023-10-19T17:57:32Z"
            }
          ]
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDOJ7sZWc5dOnv5",
      "title": "Clean up text for Aggregator-DP",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/25",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Specify how to compute discrete Gaussian parameters in order to achieve (EPSILON, DELTA)-DP, and submodule the GitHub repo with the analysis from BW18.",
      "createdAt": "2023-10-19T06:25:47Z",
      "updatedAt": "2023-10-20T18:35:43Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "9f88426c7f1b958cc41f028fcad5a222b7eb9f7e",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/histogram-aggregator-dp",
      "headRefOid": "a0c59b4c08c99228b575fc2febe4b6ebae621904",
      "closedAt": "2023-10-20T18:35:30Z",
      "mergedAt": "2023-10-20T18:35:30Z",
      "mergedBy": "junyechen1996",
      "mergeCommit": {
        "oid": "8224fc03e96bd1ab035d1907a276db463b003ed7"
      },
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Reviewers' note: stacked PR on #22 .",
          "createdAt": "2023-10-19T06:26:18Z",
          "updatedAt": "2023-10-19T06:26:18Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Squashed.",
          "createdAt": "2023-10-20T18:35:25Z",
          "updatedAt": "2023-10-20T18:35:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5kp6p5",
          "commit": {
            "abbreviatedOid": "4ca3102"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good. Once again, please ask @wangshan to weigh in on the details of the DP policy, as I don't have the context to evaluate these. (Shan, you should check at least that the details match the cited papers, as far as you can tell.)",
          "createdAt": "2023-10-19T21:38:08Z",
          "updatedAt": "2023-10-19T21:58:46Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nClient measurement can affect the aggregate result. In this document, we focus on\r\n```",
              "createdAt": "2023-10-19T21:38:08Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\n* L1 sensitivity: the sum of the absolute values of differences at all coordinates\r\n```",
              "createdAt": "2023-10-19T21:38:22Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 34,
              "body": "```suggestion\r\n* L2 sensitivity: the sum of the squares of the differences at all coordinates of\r\n```",
              "createdAt": "2023-10-19T21:38:31Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 64,
              "body": "```suggestion\r\nparameters `EPSILON` and `DELTA`, and also the `SENSITIVITY` of the aggregation\r\n```",
              "createdAt": "2023-10-19T21:39:23Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 70,
              "body": "Simpler. Plus, what are \"aggregation considerations\"? :)\r\n```suggestion\r\nIn this section we describe how to achieve `(EPSILON, DELTA)`-DP for `Prio3Histogram` by asking\r\neach Aggregator to independently add discrete Gaussian noise to its aggregate\r\nshare.\r\n```",
              "createdAt": "2023-10-19T21:41:50Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nWe use the discrete Gaussian mechanism described\r\n```",
              "createdAt": "2023-10-19T21:42:24Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 77,
              "body": "Also, I think \"in\" sounds better than \"under\", though I'm not sure which would is more grammatically correct.\r\n```suggestion\r\nIn order to achieve `(EPSILON, DELTA)`-DP under the OAOC trust model, all\r\n```",
              "createdAt": "2023-10-19T21:43:40Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 82,
              "body": "Why are two citations needed/useful?",
              "createdAt": "2023-10-19T21:45:23Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 84,
              "body": "\"To compute the parameter ... an aggregation function.\": This sentence can be simplified. How about something like: \"Theorem 7 in {{CKS20}} shows how to compute `SIGMA` for given approximate-DP parameters and L2-sensitivity.\"",
              "createdAt": "2023-10-19T21:46:40Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 86,
              "body": "\"because changing one coordinate of a Client measurement affects two coordinates\": What does this mean? Please unpack this a bit in the text.",
              "createdAt": "2023-10-19T21:48:12Z",
              "updatedAt": "2023-10-19T21:58:46Z"
            },
            {
              "originalPosition": 88,
              "body": "Eventually this draft will need to be self-describing, i.e., it won't be sufficient to refer to code associated with some research paper. I'd leave an author note here so you remember to do this later.",
              "createdAt": "2023-10-19T21:49:42Z",
              "updatedAt": "2023-10-19T21:58:47Z"
            },
            {
              "originalPosition": 97,
              "body": "```suggestion\r\nWe will use `Prio3Histogram` {{Section 7.4.4 of !VDAF}} to ensure that each Client\r\n```",
              "createdAt": "2023-10-19T21:50:20Z",
              "updatedAt": "2023-10-19T21:58:47Z"
            },
            {
              "originalPosition": 95,
              "body": "Why is this a section? Also, why are we talking about robustness here? Our purpose is to describe a DP policy, whose security goals are orthogonal.",
              "createdAt": "2023-10-19T21:51:14Z",
              "updatedAt": "2023-10-19T21:58:47Z"
            },
            {
              "originalPosition": 129,
              "body": "```suggestion\r\n    # The final aggregate result should be a vector of signed\r\n```",
              "createdAt": "2023-10-19T21:51:49Z",
              "updatedAt": "2023-10-19T21:58:47Z"
            },
            {
              "originalPosition": 131,
              "body": "```suggestion\r\n    # noise that may have a larger absolute value than the count\r\n```",
              "createdAt": "2023-10-19T21:52:01Z",
              "updatedAt": "2023-10-19T21:58:47Z"
            },
            {
              "originalPosition": 138,
              "body": "```suggestion\r\n        # Transforming a one-hot vector into another will affect two\r\n```",
              "createdAt": "2023-10-19T21:53:14Z",
              "updatedAt": "2023-10-19T21:58:47Z"
            },
            {
              "originalPosition": 157,
              "body": "```suggestion\r\n        Sample discrete Gaussian noise, and merge it with the aggregate\r\n```",
              "createdAt": "2023-10-19T21:53:50Z",
              "updatedAt": "2023-10-19T21:58:47Z"
            },
            {
              "originalPosition": 226,
              "body": "Good summary! However, drafts don't usually have Conclusion sections the way papers do. I think this is a useful thing to note, but let's put it before the policies somewhere.",
              "createdAt": "2023-10-19T21:55:51Z",
              "updatedAt": "2023-10-19T21:58:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ktXT3",
          "commit": {
            "abbreviatedOid": "077e398"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I believe the open threads are:\r\n\r\n- Why two citations for discrete Gaussian: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/25#discussion_r1366164798\r\n- Clarify why L2-sensitivity is sqrt(2): https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/25#discussion_r1366174380",
          "createdAt": "2023-10-20T09:19:53Z",
          "updatedAt": "2023-10-20T10:43:55Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Copied some of the texts from Client-DP :) ",
              "createdAt": "2023-10-20T09:19:53Z",
              "updatedAt": "2023-10-20T10:43:56Z"
            },
            {
              "originalPosition": 77,
              "body": "Me neither. I can change it to \"in\".",
              "createdAt": "2023-10-20T09:21:02Z",
              "updatedAt": "2023-10-20T10:43:56Z"
            },
            {
              "originalPosition": 95,
              "body": "Removed it. I thought I'd do something similar like the Client-DP section by briefly describing why use this VDAF.",
              "createdAt": "2023-10-20T09:43:32Z",
              "updatedAt": "2023-10-20T10:43:56Z"
            },
            {
              "originalPosition": 226,
              "body": "Moved it to intro of histogram use case.",
              "createdAt": "2023-10-20T09:43:47Z",
              "updatedAt": "2023-10-20T10:43:56Z"
            },
            {
              "originalPosition": 88,
              "body": "Added an author note there.",
              "createdAt": "2023-10-20T09:44:06Z",
              "updatedAt": "2023-10-20T10:43:56Z"
            },
            {
              "originalPosition": 84,
              "body": "Good point. Fixed.",
              "createdAt": "2023-10-20T10:24:46Z",
              "updatedAt": "2023-10-20T10:43:56Z"
            },
            {
              "originalPosition": 82,
              "body": "So Theorem 8 of [BW18](https://arxiv.org/pdf/1805.06530.pdf) is the first paper that has the analysis for why *continuous* Gaussian achieves `(EPSILON, DELTA)`-DP. Theorem 7 in [CKS20](https://arxiv.org/pdf/2004.00010.pdf) shows similar result for discrete Gaussian.\r\n\r\nThere is a caveat though, also related to one feedback from Kunal: CKS20 makes a note that: when `SIGMA` is small, there is small difference in `(EPSILON, DELTA)` achieved by continuous and discrete Gaussian (Figure 1 has some details). If we use the algorithm from BW18 (which is intended for continuous Gaussian), we need to be careful when `SIGMA` is small, i.e., when the desired `(EPSILON, DELTA)`-DP is weak. I made an author note in the draft.",
              "createdAt": "2023-10-20T10:30:58Z",
              "updatedAt": "2023-10-20T10:45:02Z"
            },
            {
              "originalPosition": 86,
              "body": "I clarified further:\r\n\r\n> because transforming an one-hot vector into another will affect two coordinates, e.g., transforming an one-hot vector `[1, 0, 0]` to `[0, 1, 0]` changes L2-sensitivity by `sqrt(2)`.",
              "createdAt": "2023-10-20T10:31:35Z",
              "updatedAt": "2023-10-20T10:43:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kxRkq",
          "commit": {
            "abbreviatedOid": "4ca3102"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T17:49:31Z",
          "updatedAt": "2023-10-20T17:49:31Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Thanks!",
              "createdAt": "2023-10-20T17:49:31Z",
              "updatedAt": "2023-10-20T17:49:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kxRzO",
          "commit": {
            "abbreviatedOid": "4ca3102"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T17:50:13Z",
          "updatedAt": "2023-10-20T17:50:14Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "Good enough for now.",
              "createdAt": "2023-10-20T17:50:14Z",
              "updatedAt": "2023-10-20T17:50:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kxR4L",
          "commit": {
            "abbreviatedOid": "7090455"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-20T17:50:29Z",
          "updatedAt": "2023-10-20T17:50:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 27,
      "id": "PR_kwDOJ7sZWc5dagte",
      "title": "Kunal's feedback on namings and citations",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/27",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-20T19:11:01Z",
      "updatedAt": "2023-10-23T15:37:08Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "8224fc03e96bd1ab035d1907a276db463b003ed7",
      "headRepository": "junyechen1996/draft-wang-ppm-differential-privacy-1",
      "headRefName": "junyec/kunal-feedback",
      "headRefOid": "663bb61acc30b924206813381f19f702ffb8531a",
      "closedAt": "2023-10-23T15:37:08Z",
      "mergedAt": "2023-10-23T15:37:08Z",
      "mergedBy": "junyechen1996",
      "mergeCommit": {
        "oid": "986ac0be31fa248b70ea82d8f155179658aa429f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5kxylY",
          "commit": {
            "abbreviatedOid": "44a7f9b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:12:08Z",
          "updatedAt": "2023-10-20T19:19:05Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "From Kunal: \"in general, the rate at which CLT gives convergence to Gaussian is not good enough to get reasonable (eps, delta)-DP guarantees. While it may provide intuition, if we want to use, say, sum of binomials to get something like a Gaussian, we would want to analyze it from scratch.\"",
              "createdAt": "2023-10-20T19:12:08Z",
              "updatedAt": "2023-10-20T19:19:05Z"
            },
            {
              "originalPosition": 263,
              "body": "Not sure what @kunal-talwar wants to say here. Waiting to hear back from him.",
              "createdAt": "2023-10-20T19:13:38Z",
              "updatedAt": "2023-10-20T19:19:05Z"
            },
            {
              "originalPosition": 184,
              "body": "From Kunal: we should change Client-DP to Client randomization, and Aggregator-DP to Aggregator randomization. Client or Aggregator-DP typically means DP guarantee, e.g. `EPSILON`-DP, or `(EPSILON, DELTA)`-DP.",
              "createdAt": "2023-10-20T19:14:59Z",
              "updatedAt": "2023-10-20T19:19:05Z"
            },
            {
              "originalPosition": 602,
              "body": "This paragraph is mainly talking about Aggregator compensation, but currently in Appendix. We could remove it too if we don't want to distract readers at this point.",
              "createdAt": "2023-10-20T19:16:50Z",
              "updatedAt": "2023-10-20T19:19:05Z"
            },
            {
              "originalPosition": 609,
              "body": "Putting other definitions of neighboring batches into Appendix per Kunal's suggestion.",
              "createdAt": "2023-10-20T19:17:12Z",
              "updatedAt": "2023-10-20T19:19:05Z"
            },
            {
              "originalPosition": 196,
              "body": "From Kunal: we should at least cite the original proposal of RAPPOR, but [MJTB+22](https://arxiv.org/abs/2211.10082) has a clean description of the symmetric RAPPOR that we use here.",
              "createdAt": "2023-10-20T19:18:17Z",
              "updatedAt": "2023-10-20T19:19:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kyEmz",
          "commit": {
            "abbreviatedOid": "44a7f9b"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-20T20:14:22Z",
          "updatedAt": "2023-10-20T20:19:36Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "@kunal-talwar how to distinguish between malicious and honest-but-curious parties?",
              "createdAt": "2023-10-20T20:14:22Z",
              "updatedAt": "2023-10-20T20:19:36Z"
            },
            {
              "originalPosition": 159,
              "body": "Do we want to explain why this is the case?",
              "createdAt": "2023-10-20T20:15:39Z",
              "updatedAt": "2023-10-20T20:19:36Z"
            },
            {
              "originalPosition": 184,
              "body": "I agree with the rename. However, do we want some text to explain that the goal of DpPolicy is to achieve Aggregator-DP guarantee, using either client-randomisation or aggregator randomisation.",
              "createdAt": "2023-10-20T20:18:03Z",
              "updatedAt": "2023-10-20T20:19:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5kyTB-",
          "commit": {
            "abbreviatedOid": "44a7f9b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This looks to be a strict improvement.",
          "createdAt": "2023-10-20T21:10:52Z",
          "updatedAt": "2023-10-20T21:15:47Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "How does one formalize \"polynomially small\"? Is there a security parameter in some DP definitions?\r\n\r\nIs there a different way to word this?",
              "createdAt": "2023-10-20T21:10:53Z",
              "updatedAt": "2023-10-20T21:15:47Z"
            },
            {
              "originalPosition": 117,
              "body": "I suspect the distinction won't be helpful. For the purposes of (differential) privacy, suppose that all parties corrupted by the attacker are fully malicious and not just semi-honest.",
              "createdAt": "2023-10-20T21:12:15Z",
              "updatedAt": "2023-10-20T21:15:47Z"
            },
            {
              "originalPosition": 184,
              "body": "New terminology sounds good to me, just make sure it's consistent.\r\n@wangshan I don't think saying \"Aggregator-DP guarantee\" is meaningful unless we define it. For now, pure-DP and approximate-DP are the only well-defined terms.",
              "createdAt": "2023-10-20T21:14:30Z",
              "updatedAt": "2023-10-20T21:15:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5k5kDg",
          "commit": {
            "abbreviatedOid": "44a7f9b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Remaining opens (none are huge blockers before draft cut deadline):\r\n\r\n- difference between malicious and honest-but-curious (also putting it in issue #28 ): https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/27/files#r1367450249\r\n- Formally define local- and aggregate-DP guarantee: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/27/files#r1367489263\r\n- how to define \"polynomially small\" in the batch size (https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/27/files#r1367487174): I've clarified it in the draft.",
          "createdAt": "2023-10-23T15:01:20Z",
          "updatedAt": "2023-10-23T15:13:08Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I clarified it a bit:\r\n\r\n> `DELTA` can intuitively be understood as the probability that a piece of information is leaked, e.g., a Client measurement is leaked, so `DELTA` is typically taken to be polynomially small in the batch size or smaller, i.e., some value much smaller than `1 / batch_size`.",
              "createdAt": "2023-10-23T15:01:20Z",
              "updatedAt": "2023-10-23T15:13:08Z"
            },
            {
              "originalPosition": 159,
              "body": "Explained it a bit:\r\n\r\n> where `EPSILON < EPSILON'` and `DELTA > DELTA'`, because if we make `EPSILON` larger (i.e., weaker privacy), we may achieve a smaller `DELTA` (i.e., stronger privacy).",
              "createdAt": "2023-10-23T15:02:18Z",
              "updatedAt": "2023-10-23T15:13:08Z"
            },
            {
              "originalPosition": 184,
              "body": "nit: I think papers have been referring the guarantee achieved by DP policy to be \"aggregate differential privacy\". The guarantee achieved at Client is referred to as Client- or local-DP guarantee.\r\n\r\nNot a huge blocker: I think we need a section to formally define Client- (or local-) or aggregate- (or central-) DP guarantee, which are currently in {{levels}}. For the pure-DP and approximate-DP we've defined, we've been assuming aggregate DP guarantee.",
              "createdAt": "2023-10-23T15:05:47Z",
              "updatedAt": "2023-10-23T15:13:08Z"
            },
            {
              "originalPosition": 263,
              "body": "From Kunal: describe what each of the three methods of `DpMechanism` does. I've clarified them now.",
              "createdAt": "2023-10-23T15:06:20Z",
              "updatedAt": "2023-10-23T15:13:08Z"
            },
            {
              "originalPosition": 117,
              "body": "Putting it into an issue instead: #28 ",
              "createdAt": "2023-10-23T15:09:33Z",
              "updatedAt": "2023-10-23T15:13:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOJ7sZWc5dkg_D",
      "title": "Fix local epsilon in one of the RAPPOR numbers",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/29",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T19:54:28Z",
      "updatedAt": "2023-10-23T19:56:43Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "986ac0be31fa248b70ea82d8f155179658aa429f",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/fix-rappor-numbers",
      "headRefOid": "327d6b1a3d1733d7e43f36a18df863dda1849184",
      "closedAt": "2023-10-23T19:55:27Z",
      "mergedAt": "2023-10-23T19:55:27Z",
      "mergedBy": "junyechen1996",
      "mergeCommit": {
        "oid": "b7ee569e598553f1de2ee5bfb15cf7a5e9dd85f2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 30,
      "id": "PR_kwDOJ7sZWc5dkyPs",
      "title": "Add an abstract",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/30",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "kunal-talwar"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T20:48:02Z",
      "updatedAt": "2023-10-23T21:05:28Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "b7ee569e598553f1de2ee5bfb15cf7a5e9dd85f2",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/lastpass",
      "headRefOid": "67ed01c720b2c1aec02cff91d2ffbbe971ab0f57",
      "closedAt": "2023-10-23T21:05:28Z",
      "mergedAt": "2023-10-23T21:05:28Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "10e992c0de93890009b8a6e0d3962e5f29d5a983"
      },
      "comments": [
        {
          "author": "kunal-talwar",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good to me. The only change I would suggest is to replace \"no single input measurement significantly impacts the value of the aggregate result.\" to \"no single input measurement significantly impacts the distribution of the\r\naggregate result.\"",
          "createdAt": "2023-10-23T20:53:07Z",
          "updatedAt": "2023-10-23T20:53:07Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Done.",
          "createdAt": "2023-10-23T20:57:58Z",
          "updatedAt": "2023-10-23T20:57:58Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Squashed.",
          "createdAt": "2023-10-23T21:04:44Z",
          "updatedAt": "2023-10-23T21:04:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5k8PKK",
          "commit": {
            "abbreviatedOid": "461d266"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Some typos, otherwise LGTM.",
          "createdAt": "2023-10-23T20:59:38Z",
          "updatedAt": "2023-10-23T21:00:43Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nimplementations of mechanisms and policies can be found at\r\n```",
              "createdAt": "2023-10-23T20:59:38Z",
              "updatedAt": "2023-10-23T21:00:43Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nhttps://github.com/wangshan/draft-wang-ppm-differential-privacy.]\r\n```",
              "createdAt": "2023-10-23T21:00:00Z",
              "updatedAt": "2023-10-23T21:00:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 31,
      "id": "PR_kwDOJ7sZWc5dk3tH",
      "title": "Pass of intro",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/31",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T21:06:21Z",
      "updatedAt": "2023-10-23T21:27:42Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "10e992c0de93890009b8a6e0d3962e5f29d5a983",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/lastpass-2",
      "headRefOid": "b83e93f053d728a440edfd7122976ca9e818a4ef",
      "closedAt": "2023-10-23T21:27:42Z",
      "mergedAt": "2023-10-23T21:27:42Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "f57d01f697a1a98d075c4e74c9952e236d82b399"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5k8Uh0",
          "commit": {
            "abbreviatedOid": "b83e93f"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T21:16:46Z",
          "updatedAt": "2023-10-23T21:17:35Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Not related to this PR: but do we want to have a bullet point to mention \u201cuse cases\u201d where we show how different DP policies can be used on?",
              "createdAt": "2023-10-23T21:16:46Z",
              "updatedAt": "2023-10-23T21:17:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5k8YWo",
          "commit": {
            "abbreviatedOid": "b83e93f"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T21:27:34Z",
          "updatedAt": "2023-10-23T21:27:34Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Good call. I'll merge this, then do you wanna follow up with a PR?",
              "createdAt": "2023-10-23T21:27:34Z",
              "updatedAt": "2023-10-23T21:27:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOJ7sZWc5dk6Ji",
      "title": "Pass of Security Goals and Trust Model",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/32",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Stacked on #31 (merge that first).",
      "createdAt": "2023-10-23T21:14:44Z",
      "updatedAt": "2023-10-23T21:35:20Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "f57d01f697a1a98d075c4e74c9952e236d82b399",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/lastpass-3",
      "headRefOid": "f38e2c0176c3bea817e5636f97d51fcb514a45b5",
      "closedAt": "2023-10-23T21:35:20Z",
      "mergedAt": "2023-10-23T21:35:20Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "ac4ce12a47e150da89d0971dd438b3197b81c510"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5k8Wot",
          "commit": {
            "abbreviatedOid": "8f8187e"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T21:24:10Z",
          "updatedAt": "2023-10-23T21:24:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOJ7sZWc5dlBtP",
      "title": "Pass of DP mechanisms",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/33",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "* Move TODOs around\r\n* Tighten up some redundant text\r\n* \"in the deletion-DP model\" to \"DP with deletions\" (a little easier to read)",
      "createdAt": "2023-10-23T21:41:27Z",
      "updatedAt": "2023-10-23T22:10:36Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "ac4ce12a47e150da89d0971dd438b3197b81c510",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/lastpass-4",
      "headRefOid": "dac7c2903de42f85dff232c72222a9664555dde0",
      "closedAt": "2023-10-23T22:10:36Z",
      "mergedAt": "2023-10-23T22:10:36Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "7c09baf5bdbca1f1a175bf856479da4c8fe22a10"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5k8hzA",
          "commit": {
            "abbreviatedOid": "0eb07c0"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T22:04:05Z",
          "updatedAt": "2023-10-23T22:05:43Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nA concrete DP mechanism implements the following methods:\r\n```",
              "createdAt": "2023-10-23T22:04:05Z",
              "updatedAt": "2023-10-23T22:05:43Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n  generally depends on the data type. It may be called by `DpMechanism.add_noise()`.\r\n```\r\n\r\n?",
              "createdAt": "2023-10-23T22:04:42Z",
              "updatedAt": "2023-10-23T22:05:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOJ7sZWc5dlDkz",
      "title": "Pass of DP policies",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/34",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Stacked on #33 (merge that first).",
      "createdAt": "2023-10-23T21:49:00Z",
      "updatedAt": "2023-10-23T22:12:56Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "7c09baf5bdbca1f1a175bf856479da4c8fe22a10",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/lastpass-5",
      "headRefOid": "46cb8d0424f8ed0e95af0b3e59a50f0dcd58071f",
      "closedAt": "2023-10-23T22:12:56Z",
      "mergedAt": "2023-10-23T22:12:55Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "9454dfb0b3d48d2c2055d132d174c9e6669c7e49"
      },
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Rebased.",
          "createdAt": "2023-10-23T22:11:23Z",
          "updatedAt": "2023-10-23T22:11:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5k8i5K",
          "commit": {
            "abbreviatedOid": "8f95b65"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T22:08:45Z",
          "updatedAt": "2023-10-23T22:08:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 35,
      "id": "PR_kwDOJ7sZWc5dlH-o",
      "title": "Pass of use cases and update intro to reflect new structure",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/35",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Stacked on #34 (merge that first).",
      "createdAt": "2023-10-23T22:07:13Z",
      "updatedAt": "2023-10-23T22:33:41Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "9454dfb0b3d48d2c2055d132d174c9e6669c7e49",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/lastpass-6",
      "headRefOid": "6654eb379d78112979cb3872c1511a07c0886ace",
      "closedAt": "2023-10-23T22:33:27Z",
      "mergedAt": "2023-10-23T22:33:27Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "d2d1235d4a7b0a4ac75db56f929ef90265b6f97c"
      },
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Rebased.",
          "createdAt": "2023-10-23T22:13:39Z",
          "updatedAt": "2023-10-23T22:13:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5k8jC7",
          "commit": {
            "abbreviatedOid": "ef6ee25"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Minor nits, otherwise LGTM. Thanks for taking care of restructuring intro!",
          "createdAt": "2023-10-23T22:09:18Z",
          "updatedAt": "2023-10-23T22:27:38Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n   policies for achieving DP for specific DAP use cases.\r\n```",
              "createdAt": "2023-10-23T22:09:18Z",
              "updatedAt": "2023-10-23T22:27:38Z"
            },
            {
              "originalPosition": 67,
              "body": "Do you need code quote `` around Prio3Histogram? Similarly for Prio3MultiHotHistogram below.",
              "createdAt": "2023-10-23T22:12:37Z",
              "updatedAt": "2023-10-23T22:27:38Z"
            },
            {
              "originalPosition": 8,
              "body": "Feel free to take it or not, the goal is to connect with the previous bullet point:\r\n\r\n```suggestion\r\n1. {{policies}} defines DP policies that are implemented with DP mechanisms, their composition with VDAFs, and their\r\n```",
              "createdAt": "2023-10-23T22:19:22Z",
              "updatedAt": "2023-10-23T22:27:38Z"
            },
            {
              "originalPosition": 9,
              "body": "Feel free to take it or not:\r\n\r\n```suggestion\r\n   execution semantics for DAP. {{run-dp-policy-with-vdaf}} then demonstrates how to execute VDAFs with DP policies.\r\n```",
              "createdAt": "2023-10-23T22:21:38Z",
              "updatedAt": "2023-10-23T22:27:38Z"
            },
            {
              "originalPosition": 56,
              "body": "Since the function below is renamed to `run_vdaf_with_dp_policy`, maybe make a pass to change it for all ? E.g. \u201cExecuting VDAFs with DP Policies {#run-vdaf-with-dp-policy}\u201d.",
              "createdAt": "2023-10-23T22:26:45Z",
              "updatedAt": "2023-10-23T22:27:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5k8n55",
          "commit": {
            "abbreviatedOid": "ef6ee25"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T22:29:00Z",
          "updatedAt": "2023-10-23T22:29:00Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "I go back and fourth on this: WDYT?",
              "createdAt": "2023-10-23T22:29:00Z",
              "updatedAt": "2023-10-23T22:29:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5k8oYK",
          "commit": {
            "abbreviatedOid": "ef6ee25"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T22:31:18Z",
          "updatedAt": "2023-10-23T22:31:18Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "Done.",
              "createdAt": "2023-10-23T22:31:18Z",
              "updatedAt": "2023-10-23T22:31:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5k8o0z",
          "commit": {
            "abbreviatedOid": "6654eb3"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T22:33:31Z",
          "updatedAt": "2023-10-23T22:33:41Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "I say add code quote since `Histogram` below already does it\u2026 but probably not a big deal.",
              "createdAt": "2023-10-23T22:33:31Z",
              "updatedAt": "2023-10-23T22:33:41Z"
            }
          ]
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDOJ7sZWc5dlMKs",
      "title": "Spell check",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/36",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T22:24:05Z",
      "updatedAt": "2023-10-23T22:35:54Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "d2d1235d4a7b0a4ac75db56f929ef90265b6f97c",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/lastpass-7",
      "headRefOid": "ad5605f44f4d40e4948e780c909d52d8a92840eb",
      "closedAt": "2023-10-23T22:35:54Z",
      "mergedAt": "2023-10-23T22:35:54Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "800be43581a071612f39fc7294afa3da796d7fcf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5k8oZK",
          "commit": {
            "abbreviatedOid": "2a35127"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T22:31:22Z",
          "updatedAt": "2023-10-23T22:31:35Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Just noticed: we need to update DAP and VDAF references.",
              "createdAt": "2023-10-23T22:31:23Z",
              "updatedAt": "2023-10-23T22:31:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5k8owX",
          "commit": {
            "abbreviatedOid": "2a35127"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T22:33:10Z",
          "updatedAt": "2023-10-23T22:33:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Good call, will do ",
              "createdAt": "2023-10-23T22:33:10Z",
              "updatedAt": "2023-10-23T22:33:11Z"
            }
          ]
        }
      ]
    },
    {
      "number": 37,
      "id": "PR_kwDOJ7sZWc5dlPiu",
      "title": "Miscellaneous",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/37",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T22:36:54Z",
      "updatedAt": "2023-10-23T22:42:06Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "800be43581a071612f39fc7294afa3da796d7fcf",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/lastpass-8-update-refs",
      "headRefOid": "e435b21dd3b374a99ed9d8340f72d8e64ca31c63",
      "closedAt": "2023-10-23T22:42:06Z",
      "mergedAt": "2023-10-23T22:42:06Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "26e67f5e23118edfcb2f7d723a6f6af6908bc41c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5k8qM3",
          "commit": {
            "abbreviatedOid": "e435b21"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T22:40:03Z",
          "updatedAt": "2023-10-23T22:40:13Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "I was just about to ask what this file is\u2026 I thought it\u2019s something used for cutting draft.",
              "createdAt": "2023-10-23T22:40:03Z",
              "updatedAt": "2023-10-23T22:40:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDOJ7sZWc5pBMO9",
      "title": "Editorial changes",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/43",
      "state": "OPEN",
      "author": "divergentdave",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "These editorial changes fix some small errors and attempt to clarify language in a few places.",
      "createdAt": "2024-03-07T21:34:06Z",
      "updatedAt": "2024-03-08T11:24:35Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "26e67f5e23118edfcb2f7d723a6f6af6908bc41c",
      "headRepository": "divergentdave/draft-wang-ppm-differential-privacy",
      "headRefName": "editorial",
      "headRefOid": "eec508dbc87449f545f4699d7a62a234443c303d",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5yuCd1",
          "commit": {
            "abbreviatedOid": "eec508d"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks good, thanks for fixing this up @divergentdave!",
          "createdAt": "2024-03-08T11:24:35Z",
          "updatedAt": "2024-03-08T11:24:35Z",
          "comments": []
        }
      ]
    }
  ]
}